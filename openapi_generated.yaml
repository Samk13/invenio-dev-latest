paths:
  /ping:
    get:
      tags:
      - Ping
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /communities:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id001
                $ref: '#/components/schemas/CommunitySchema'
      requestBody:
        content:
          application/json:
            schema: *id001
  /communities/{pid_value}:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id002
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id002
    delete:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /user/communities:
    get:
      tags:
      - User
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSchema'
  /communities/{pid_value}/rename:
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id003
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id003
  /communities/{pid_value}/logo:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id004
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id004
    delete:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /communities/featured:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
  /communities/{pid_value}/featured:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id005
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id005
  /communities/{pid_value}/featured/{featured_id}:
    put:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id006
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: featured_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id006
    delete:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: featured_id
        in: path
        required: true
        schema:
          type: string
  /communities/{pid_value}/requests:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /communities/{pid_value}/restore:
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id007
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id007
  /communities/{pid_value}/subcommunities:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /communities/{pid_value}/members:
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id008
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id008
    delete:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id009
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id009
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /communities/{pid_value}/members/public:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /communities/{pid_value}/invitations:
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id010
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id010
    put:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id011
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id011
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /communities/{pid_value}/membership-requests:
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id012
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id012
  /communities/{pid_value}/actions/join-request:
    post:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id013
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id013
  /hooks/receivers/{receiver_id}/events/:
    post:
      tags:
      - Hooks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id014
                type: object
      parameters:
      - name: receiver_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id014
  /hooks/receivers/{receiver_id}/events/{event_id}:
    delete:
      tags:
      - Hooks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: event_id
        in: path
        required: true
        schema:
          type: string
      - name: receiver_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
      - Hooks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: event_id
        in: path
        required: true
        schema:
          type: string
      - name: receiver_id
        in: path
        required: true
        schema:
          type: string
  /banners/:
    post:
      tags:
      - Banners
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id015
                type: object
      requestBody:
        content:
          application/json:
            schema: *id015
    get:
      tags:
      - Banners
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /banners/{banner_id}:
    get:
      tags:
      - Banners
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: banner_id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
      - Banners
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: banner_id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Banners
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id016
                type: object
      parameters:
      - name: banner_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id016
  /vocabularies/{type}:
    get:
      tags:
      - Vocabularies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VocabularySchema'
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Vocabularies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id017
                $ref: '#/components/schemas/VocabularySchema'
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id017
  /vocabularies/{type}/{pid_value}:
    get:
      tags:
      - Vocabularies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VocabularySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Vocabularies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id018
                $ref: '#/components/schemas/VocabularySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id018
    delete:
      tags:
      - Vocabularies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VocabularySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
  /vocabularies/tasks:
    post:
      tags:
      - Vocabularies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id019
                $ref: '#/components/schemas/VocabularySchema'
      requestBody:
        content:
          application/json:
            schema: *id019
  /affiliations:
    get:
      tags:
      - Affiliations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AffiliationRelationSchema'
    post:
      tags:
      - Affiliations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id020
                $ref: '#/components/schemas/AffiliationRelationSchema'
      requestBody:
        content:
          application/json:
            schema: *id020
  /affiliations/{pid_value}:
    get:
      tags:
      - Affiliations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliationRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Affiliations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id021
                $ref: '#/components/schemas/AffiliationRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id021
    delete:
      tags:
      - Affiliations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliationRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /awards:
    get:
      tags:
      - Awards
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwardRelationSchema'
    post:
      tags:
      - Awards
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id022
                $ref: '#/components/schemas/AwardRelationSchema'
      requestBody:
        content:
          application/json:
            schema: *id022
  /awards/{pid_value}:
    get:
      tags:
      - Awards
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Awards
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id023
                $ref: '#/components/schemas/AwardRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id023
    delete:
      tags:
      - Awards
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /funders:
    get:
      tags:
      - Funders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FunderRelationSchema'
    post:
      tags:
      - Funders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id024
                $ref: '#/components/schemas/FunderRelationSchema'
      requestBody:
        content:
          application/json:
            schema: *id024
  /funders/{pid_value}:
    get:
      tags:
      - Funders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunderRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Funders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id025
                $ref: '#/components/schemas/FunderRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id025
    delete:
      tags:
      - Funders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunderRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /vocabularies/:
    get:
      tags:
      - Vocabularies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VocabularySchema'
  /names:
    get:
      tags:
      - Names
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
      - Names
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id026
                type: object
      requestBody:
        content:
          application/json:
            schema: *id026
  /names/{pid_value}:
    get:
      tags:
      - Names
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Names
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id027
                type: object
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id027
    delete:
      tags:
      - Names
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /names/{pid_type}/{pid_value}:
    get:
      tags:
      - Names
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: pid_type
        in: path
        required: true
        schema:
          type: string
  /subjects:
    get:
      tags:
      - Subjects
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectRelationSchema'
    post:
      tags:
      - Subjects
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id028
                $ref: '#/components/schemas/SubjectRelationSchema'
      requestBody:
        content:
          application/json:
            schema: *id028
  /subjects/{pid_value}:
    get:
      tags:
      - Subjects
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Subjects
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id029
                $ref: '#/components/schemas/SubjectRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id029
    delete:
      tags:
      - Subjects
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectRelationSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /iiif/{uuid}/manifest:
    get:
      tags:
      - Iiif
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
  /iiif/{uuid}/sequence/default:
    get:
      tags:
      - Iiif
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
  /iiif/{uuid}/canvas/{file_name}:
    get:
      tags:
      - Iiif
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: file_name
        in: path
        required: true
        schema:
          type: string
      - name: uuid
        in: path
        required: true
        schema:
          type: string
  /iiif/{uuid}:
    get:
      tags:
      - Iiif
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
  /iiif/{uuid}/info.json:
    get:
      tags:
      - Iiif
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
  /iiif/{uuid}/{region}/{size}/{rotation}/{quality}.{image_format}:
    get:
      tags:
      - Iiif
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: region
        in: path
        required: true
        schema:
          type: string
      - name: quality
        in: path
        required: true
        schema:
          type: string
      - name: image_format
        in: path
        required: true
        schema:
          type: string
      - name: rotation
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: path
        required: true
        schema:
          type: string
      - name: uuid
        in: path
        required: true
        schema:
          type: string
  /oaipmh/sets:
    get:
      tags:
      - Oaipmh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
      - Oaipmh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id030
                type: object
      requestBody:
        content:
          application/json:
            schema: *id030
  /oaipmh/sets/{id}:
    get:
      tags:
      - Oaipmh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Oaipmh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id031
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id031
    delete:
      tags:
      - Oaipmh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /oaipmh/formats:
    get:
      tags:
      - Oaipmh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /communities/{pid_value}/records:
    get:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
      - Communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/communities:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id032
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id032
    delete:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id033
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id033
  /records/{pid_value}/communities-suggestions:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{record_pid}/requests:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: record_pid
        in: path
        required: true
        schema:
          type: string
  /records:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id034
                $ref: '#/components/schemas/MetadataSchema'
      requestBody:
        content:
          application/json:
            schema: *id034
  /records/{pid_value}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id035
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id035
    delete:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/versions:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id036
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id036
  /records/{pid_value}/versions/latest:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id037
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id037
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id038
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id038
    delete:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/actions/publish:
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id039
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id039
  /user/records:
    get:
      tags:
      - User
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSchema'
  /records/{pid_value}/draft/actions/files-import:
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id040
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id040
  /records/{pid_value}/draft/pids/{scheme}:
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id041
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: scheme
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id041
    delete:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: scheme
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/review:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id042
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id042
    delete:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/actions/submit-review:
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id043
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id043
  /records/{pid_value}/access/request:
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id044
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id044
  /records/{pid_value}/access:
    put:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id045
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id045
  /records/{pid_value}/delete:
    delete:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/restore:
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id046
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id046
  /records/{pid_value}/quota:
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id047
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id047
  /users/{pid_value}/quota:
    post:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id048
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id048
  /records/{pid_value}/revisions:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/revisions/{revision_id}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: revision_id
        in: path
        required: true
        schema:
          type: string
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/files:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id049
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id049
    delete:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/files/{key}:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id050
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id050
    delete:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/files/{key}/content:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id051
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id051
  /records/{pid_value}/draft/files-archive:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/files/{key}/commit:
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id052
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id052
  /records/{pid_value}/draft/files/{key}/content/{part}:
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id053
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: part
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id053
  /records/{pid_value}/draft/media-files:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id054
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id054
    delete:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/media-files/{key}:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id055
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id055
    delete:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/media-files/{key}/content:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id056
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id056
  /records/{pid_value}/draft/media-files-archive:
    get:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/draft/media-files/{key}/commit:
    post:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id057
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id057
  /records/{pid_value}/draft/media-files/{key}/content/{part}:
    put:
      tags:
      - Drafts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id058
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: part
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id058
  /records/{pid_value}/access/groups/{subject_id}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
    patch:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id059
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id059
  /records/{pid_value}/access/groups:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/access/grants:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id060
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id060
  /records/{pid_value}/access/grants/{grant_id}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id061
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id061
    patch:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id062
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id062
    delete:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/access/links:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id063
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id063
  /records/{pid_value}/access/links/{link_id}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: link_id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id064
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: link_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id064
    patch:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id065
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: link_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id065
    delete:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: link_id
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/files:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/files/{key}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/files/{key}/content:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/files-archive:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/media-files:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/media-files/{key}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/media-files/{key}/content:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/media-files-archive:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /records/{pid_value}/access/users/{subject_id}:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
    patch:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id066
                $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id066
  /records/{pid_value}/access/users:
    get:
      tags:
      - Records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /files:
    post:
      tags:
      - Files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id067
                $ref: '#/components/schemas/FileSchema'
      requestBody:
        content:
          application/json:
            schema: *id067
  /files/{bucket_id}:
    get:
      tags:
      - Files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
  /files/{bucket_id}/{key}:
    delete:
      tags:
      - Files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
      - Files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id068
                $ref: '#/components/schemas/FileSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id068
    put:
      tags:
      - Files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id069
                $ref: '#/components/schemas/FileSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id069
  /pages:
    post:
      tags:
      - Pages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id070
                type: object
      requestBody:
        content:
          application/json:
            schema: *id070
    get:
      tags:
      - Pages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /pages/{id}:
    get:
      tags:
      - Pages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
      - Pages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Pages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id071
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id071
  /oauth/static/{filename}:
    get:
      tags:
      - Oauth
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
  /oauth/login/{remote_app}/:
    get:
      tags:
      - Oauth
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
  /oauth/authorized/{remote_app}/:
    get:
      tags:
      - Oauth
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
  /oauth/signup/{remote_app}/:
    get:
      tags:
      - Oauth
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Oauth
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id072
                type: object
      parameters:
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id072
  /oauth/disconnect/{remote_app}/:
    get:
      tags:
      - Oauth
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
  /stats:
    post:
      tags:
      - Stats
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id073
                $ref: '#/components/schemas/DeletionStatusSchema'
      requestBody:
        content:
          application/json:
            schema: *id073
  /domains:
    get:
      tags:
      - Domains
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSchema'
    post:
      tags:
      - Domains
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id074
                $ref: '#/components/schemas/DomainSchema'
      requestBody:
        content:
          application/json:
            schema: *id074
  /domains/{pid_value}:
    get:
      tags:
      - Domains
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Domains
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id075
                $ref: '#/components/schemas/DomainSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id075
    delete:
      tags:
      - Domains
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
  /groups:
    get:
      tags:
      - Groups
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupSchema'
  /groups/{id}:
    get:
      tags:
      - Groups
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /groups/{id}/avatar.svg:
    get:
      tags:
      - Groups
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /users:
    get:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSchema'
  /users/{id}:
    get:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /users/{id}/avatar.svg:
    get:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /users/{id}/approve:
    post:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id076
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id076
  /users/{id}/block:
    post:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id077
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id077
  /users/{id}/restore:
    post:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id078
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id078
  /users/{id}/deactivate:
    post:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id079
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id079
  /users/{id}/activate:
    post:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id080
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id080
  /users/{id}/impersonate:
    post:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id081
                $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id081
  /users/all:
    get:
      tags:
      - Users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSchema'
  /logs/jobs:
    get:
      tags:
      - Logs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobLogEntrySchema'
  /jobs:
    get:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobSchema'
    post:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id082
                $ref: '#/components/schemas/JobSchema'
      requestBody:
        content:
          application/json:
            schema: *id082
  /jobs/{job_id}:
    get:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id083
                $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id083
    delete:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
  /jobs/{job_id}/runs:
    get:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id084
                $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id084
  /jobs/{job_id}/runs/{run_id}:
    get:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
      - name: run_id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
      - name: run_id
        in: path
        required: true
        schema:
          type: string
  /jobs/{job_id}/runs/{run_id}/logs:
    get:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
      - name: run_id
        in: path
        required: true
        schema:
          type: string
  /jobs/{job_id}/runs/{run_id}/actions/stop:
    post:
      tags:
      - Jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id085
                $ref: '#/components/schemas/JobSchema'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
      - name: run_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id085
  /tasks:
    get:
      tags:
      - Tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskSchema'
  /tasks/{registered_task_id}/args:
    get:
      tags:
      - Tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskSchema'
      parameters:
      - name: registered_task_id
        in: path
        required: true
        schema:
          type: string
  /audit-logs/:
    get:
      tags:
      - Audit-Logs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /audit-logs/{id}:
    get:
      tags:
      - Audit-Logs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /requests/{request_id}/comments:
    post:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id086
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id086
  /requests/{request_id}/comments/{comment_id}:
    get:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
      - name: request_id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id087
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
      - name: request_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id087
    delete:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
      - name: request_id
        in: path
        required: true
        schema:
          type: string
  /requests/{request_id}/timeline:
    get:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
  /requests/:
    get:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestSchema'
  /requests/{id}:
    get:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id088
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id088
    delete:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /requests/{id}/actions/{action}:
    post:
      tags:
      - Requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id089
                $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: action
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: *id089
  /user/requests:
    get:
      tags:
      - User
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSchema'
  /login:
    post:
      tags:
      - Login
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id090
                type: object
      requestBody:
        content:
          application/json:
            schema: *id090
  /logout:
    get:
      tags:
      - Logout
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
      - Logout
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id091
                type: object
      requestBody:
        content:
          application/json:
            schema: *id091
  /me:
    get:
      tags:
      - Me
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunityMetadataSchema'
  /register:
    post:
      tags:
      - Register
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id092
                type: object
      requestBody:
        content:
          application/json:
            schema: *id092
  /change-password:
    post:
      tags:
      - Change-Password
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id093
                type: object
      requestBody:
        content:
          application/json:
            schema: *id093
  /forgot-password:
    post:
      tags:
      - Forgot-Password
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id094
                type: object
      requestBody:
        content:
          application/json:
            schema: *id094
  /reset-password:
    post:
      tags:
      - Reset-Password
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id095
                type: object
      requestBody:
        content:
          application/json:
            schema: *id095
  /send-confirmation-email:
    post:
      tags:
      - Send-Confirmation-Email
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id096
                type: object
      requestBody:
        content:
          application/json:
            schema: *id096
  /confirm-email:
    post:
      tags:
      - Confirm-Email
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: &id097
                type: object
      requestBody:
        content:
          application/json:
            schema: *id097
  /sessions:
    get:
      tags:
      - Sessions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /sessions/{sid_s}:
    delete:
      tags:
      - Sessions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: sid_s
        in: path
        required: true
        schema:
          type: string
  /collections/{id}/records:
    get:
      tags:
      - Collections
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
info:
  title: InvenioRDM API
  version: 0.0.1
openapi: 3.0.3
components:
  schemas:
    Identifier:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
      additionalProperties: false
    VocabularyRelation:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    FunderRelation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 1
      additionalProperties: false
    AwardRelationSchema:
      type: object
      properties:
        id:
          type: string
        number:
          type: string
        title:
          type: object
          additionalProperties:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        acronym:
          type: string
        program:
          type: string
      additionalProperties: false
    FundingRelation:
      type: object
      properties:
        funder:
          $ref: '#/components/schemas/FunderRelation'
        award:
          $ref: '#/components/schemas/AwardRelationSchema'
      additionalProperties: false
    AffiliationRelationSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        identifiers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Identifier'
    CommunityMetadata:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 250
        description:
          type: string
          minLength: 1
          maxLength: 250
        curation_policy:
          type: string
          maxLength: 50000
        page:
          type: string
          maxLength: 50000
        type:
          allOf:
          - $ref: '#/components/schemas/VocabularyRelation'
        website:
          type: string
          minLength: 1
        funding:
          type: array
          items:
            $ref: '#/components/schemas/FundingRelation'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelationSchema'
      required:
      - title
      additionalProperties: false
    CommunityAccess:
      type: object
      properties:
        visibility:
          type: string
          enum:
          - public
          - restricted
        members_visibility:
          type: string
          enum:
          - public
          - restricted
        member_policy:
          type: string
          enum:
          - open
          - closed
        record_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        record_submission_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        review_policy:
          type: string
          enum:
          - open
          - closed
          - members
      additionalProperties: false
    CustomFields:
      type: object
      properties: {}
      additionalProperties: false
    CommunityThemeStyle:
      type: object
      properties:
        font:
          type: object
          additionalProperties: {}
        primaryColor:
          type: string
        secondaryColor:
          type: string
        tertiaryColor:
          type: string
        primaryTextColor:
          type: string
        secondaryTextColor:
          type: string
        tertiaryTextColor:
          type: string
        mainHeaderBackgroundColor:
          type: string
      additionalProperties: false
    CommunityTheme:
      type: object
      properties:
        style:
          $ref: '#/components/schemas/CommunityThemeStyle'
        brand:
          type: string
        enabled:
          type: boolean
      additionalProperties: false
    RemovalReason:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    AgentSchema:
      type: object
      properties:
        user:
          type: string
      required:
      - user
      additionalProperties: false
    Tombstone:
      type: object
      properties:
        removal_reason:
          $ref: '#/components/schemas/RemovalReason'
        note:
          type: string
        removed_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/AgentSchema'
        removal_date:
          type: string
          format: date
          readOnly: true
        citation_text:
          type: string
        is_visible:
          type: boolean
      additionalProperties: false
    DeletionStatus:
      type: object
      properties:
        is_deleted:
          type: boolean
          readOnly: true
        status:
          type: string
          readOnly: true
      additionalProperties: false
    Children:
      type: object
      properties:
        allow:
          type: boolean
      additionalProperties: false
    CommunityMetadataSchema:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 250
        description:
          type: string
          minLength: 1
          maxLength: 250
        curation_policy:
          type: string
          maxLength: 50000
        page:
          type: string
          maxLength: 50000
        type:
          allOf:
          - $ref: '#/components/schemas/VocabularyRelation'
        website:
          type: string
          minLength: 1
        funding:
          type: array
          items:
            $ref: '#/components/schemas/FundingRelation'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelationSchema'
      required:
      - title
      additionalProperties: false
    CommunityAccessSchema:
      type: object
      properties:
        visibility:
          type: string
          enum:
          - public
          - restricted
        members_visibility:
          type: string
          enum:
          - public
          - restricted
        member_policy:
          type: string
          enum:
          - open
          - closed
        record_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        record_submission_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        review_policy:
          type: string
          enum:
          - open
          - closed
          - members
      additionalProperties: false
    ChildrenSchema:
      type: object
      properties:
        allow:
          type: boolean
      additionalProperties: false
    CommunityParentSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadataSchema'
        access:
          $ref: '#/components/schemas/CommunityAccessSchema'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/ChildrenSchema'
      required:
      - access
      - metadata
      - slug
    PersonOrOrganization:
      type: object
      properties:
        type:
          type: string
          enum:
          - organizational
          - personal
        name:
          type: string
        given_name:
          type: string
        family_name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
      required:
      - type
      additionalProperties: false
    BaseAffiliationRelationSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        identifiers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    DomainOrgSchema:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pid:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
        props:
          type: object
          additionalProperties:
            type: string
            maxLength: 255
        is_parent:
          type: boolean
          readOnly: true
      required:
      - name
      - pid
      additionalProperties: false
    GeometryObject:
      type: object
      properties: {}
      additionalProperties: false
    Location:
      type: object
      properties:
        geometry:
          $ref: '#/components/schemas/GeometryObject'
        place:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        description:
          type: string
      additionalProperties: false
    FileAccessSchema:
      type: object
      properties:
        hidden:
          type: boolean
      additionalProperties: false
    Transfer:
      type: object
      properties: {}
      additionalProperties: false
    FunderRelationSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 1
      additionalProperties: false
    LogContext:
      type: object
      properties:
        job_id:
          type: string
        run_id:
          type: string
      required:
      - job_id
      - run_id
      additionalProperties: false
    Schedule:
      type: object
      properties: {}
      additionalProperties: false
    User:
      type: object
      properties: {}
      additionalProperties: false
    JobArgumentsSchema:
      type: object
      properties: {}
      additionalProperties: false
    Run:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        job_id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        started_by_id:
          type: integer
          readOnly: true
        started_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        started_at:
          type: string
          format: date-time
          readOnly: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
        status:
          readOnly: true
          type: string
          enum:
          - QUEUED
          - RUNNING
          - SUCCESS
          - FAILED
          - WARNING
          - CANCELLING
          - CANCELLED
          - PARTIAL_SUCCESS
        message:
          type: string
          readOnly: true
        task_id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 250
        args:
          allOf:
          - $ref: '#/components/schemas/JobArgumentsSchema'
        custom_args:
          title: Custom args
          description: Advanced configuration for seasoned administrators.
          nullable: true
        queue:
          type: string
          enum:
          - celery
          - low
    GeometryObjectSchema:
      type: object
      properties: {}
      additionalProperties: false
    CreatorSchema:
      type: object
      properties:
        person_or_org:
          $ref: '#/components/schemas/PersonOrOrganization'
        role:
          $ref: '#/components/schemas/VocabularyRelation'
        affiliations:
          type: array
          items:
            $ref: '#/components/schemas/BaseAffiliationRelationSchema'
      required:
      - person_or_org
      additionalProperties: false
    Title:
      type: object
      properties:
        title:
          type: string
          minLength: 3
        type:
          $ref: '#/components/schemas/VocabularyRelation'
        lang:
          $ref: '#/components/schemas/VocabularyRelation'
      required:
      - title
      - type
      additionalProperties: false
    SubjectRelation:
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
        scheme:
          type: string
          readOnly: true
        title:
          type: object
          readOnly: true
          additionalProperties: {}
        props:
          type: object
          readOnly: true
          additionalProperties: {}
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        synonyms:
          type: array
          readOnly: true
          items:
            type: string
    ContributorSchema:
      type: object
      properties:
        person_or_org:
          $ref: '#/components/schemas/PersonOrOrganization'
        role:
          $ref: '#/components/schemas/VocabularyRelation'
        affiliations:
          type: array
          items:
            $ref: '#/components/schemas/BaseAffiliationRelationSchema'
      required:
      - person_or_org
      - role
      additionalProperties: false
    DateSchema:
      type: object
      properties:
        date:
          type: string
        type:
          $ref: '#/components/schemas/VocabularyRelation'
        description:
          type: string
      required:
      - date
      - type
      additionalProperties: false
    RelatedIdentifier:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
        relation_type:
          $ref: '#/components/schemas/VocabularyRelation'
        resource_type:
          $ref: '#/components/schemas/VocabularyRelation'
      additionalProperties: false
    Props:
      type: object
      properties:
        url:
          type: string
        scheme:
          type: string
      additionalProperties: false
    Rights:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          additionalProperties: {}
        description:
          type: object
          additionalProperties: {}
        icon:
          type: string
          readOnly: true
        props:
          $ref: '#/components/schemas/Props'
        link:
          type: string
      additionalProperties: false
    DescriptionSchema:
      type: object
      properties:
        description:
          type: string
          minLength: 3
        type:
          $ref: '#/components/schemas/VocabularyRelation'
        lang:
          $ref: '#/components/schemas/VocabularyRelation'
      required:
      - description
      - type
      additionalProperties: false
    FeatureSchema:
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/Location'
      additionalProperties: false
    FundingSchema:
      type: object
      properties:
        funder:
          $ref: '#/components/schemas/FunderRelationSchema'
        award:
          $ref: '#/components/schemas/AwardRelationSchema'
      required:
      - funder
      additionalProperties: false
    Reference:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
        reference:
          type: string
      required:
      - reference
      additionalProperties: false
    GrantSubject:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
          - user
          - role
          - system_role
      required:
      - id
      - type
      additionalProperties: false
    Grant:
      type: object
      properties:
        permission:
          type: string
        subject:
          $ref: '#/components/schemas/GrantSubject'
        origin:
          type: string
        message:
          type: string
        notify:
          type: boolean
      required:
      - permission
      - subject
      additionalProperties: false
    Agent:
      type: object
      properties:
        user:
          type: string
      required:
      - user
      additionalProperties: false
    SecretLink:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date
        permission:
          type: string
          enum:
          - view
          - preview
          - edit
        description:
          type: string
        origin:
          type: string
        token:
          type: string
          readOnly: true
      additionalProperties: false
    AccessSettings:
      type: object
      properties:
        allow_user_requests:
          type: boolean
        allow_guest_requests:
          type: boolean
        accept_conditions_text:
          type: string
          nullable: true
        secret_link_expiration:
          type: integer
          minimum: 0
          maximum: 365
      additionalProperties: false
    ParentAccess:
      type: object
      properties:
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
        owned_by:
          $ref: '#/components/schemas/Agent'
        links:
          type: array
          items:
            $ref: '#/components/schemas/SecretLink'
        settings:
          $ref: '#/components/schemas/AccessSettings'
      additionalProperties: false
    GenericRequestSchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        type:
          type: string
        title:
          type: string
        description:
          type: string
        number:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        is_closed:
          type: boolean
          readOnly: true
        is_open:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        created_by:
          type: object
          additionalProperties: {}
        receiver:
          type: object
          additionalProperties: {}
        topic:
          type: object
          additionalProperties: {}
      additionalProperties: false
    CommunitySchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadataSchema'
        access:
          $ref: '#/components/schemas/CommunityAccessSchema'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/ChildrenSchema'
        parent:
          readOnly: true
          anyOf:
          - $ref: '#/components/schemas/CommunityParentSchema'
          - type: object
            nullable: true
      required:
      - access
      - metadata
      - slug
    Communities:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        default:
          type: string
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CommunitySchema'
      additionalProperties: false
    PID:
      type: object
      properties:
        identifier:
          type: string
        provider:
          type: string
        client:
          type: string
      required:
      - identifier
      - provider
      additionalProperties: false
    RDMParentSchema:
      type: object
      properties:
        id:
          type: string
        access:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ParentAccess'
        review:
          $ref: '#/components/schemas/GenericRequestSchema'
        communities:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Communities'
        pids:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/PID'
        is_verified:
          type: boolean
          readOnly: true
      additionalProperties: false
    Versions:
      type: object
      properties:
        is_latest:
          type: boolean
        is_latest_draft:
          type: boolean
        index:
          type: integer
      additionalProperties: false
    MetadataSchema:
      type: object
      properties:
        resource_type:
          $ref: '#/components/schemas/VocabularyRelation'
        creators:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CreatorSchema'
        title:
          type: string
          minLength: 3
        additional_titles:
          type: array
          items:
            $ref: '#/components/schemas/Title'
        publisher:
          type: string
        publication_date:
          type: string
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/SubjectRelation'
        contributors:
          type: array
          items:
            $ref: '#/components/schemas/ContributorSchema'
        dates:
          type: array
          items:
            $ref: '#/components/schemas/DateSchema'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/VocabularyRelation'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        related_identifiers:
          type: array
          items:
            $ref: '#/components/schemas/RelatedIdentifier'
        sizes:
          type: array
          items:
            type: string
            minLength: 1
        formats:
          type: array
          items:
            type: string
            minLength: 1
        version:
          type: string
        rights:
          type: array
          items:
            $ref: '#/components/schemas/Rights'
        copyright:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 3
        additional_descriptions:
          type: array
          items:
            $ref: '#/components/schemas/DescriptionSchema'
        locations:
          $ref: '#/components/schemas/FeatureSchema'
        funding:
          type: array
          items:
            $ref: '#/components/schemas/FundingSchema'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
      - creators
      - publication_date
      - resource_type
      - title
      additionalProperties: false
    Embargo:
      type: object
      properties:
        active:
          type: boolean
          default: null
          nullable: true
        until:
          type: string
          format: date
          default: <marshmallow.missing>
          nullable: true
        reason:
          type: string
          default: null
          nullable: true
      additionalProperties: false
    Access:
      type: object
      properties:
        record:
          type: string
        files:
          type: string
        embargo:
          $ref: '#/components/schemas/Embargo'
        status:
          type: string
      required:
      - files
      - record
      additionalProperties: false
    Metadata:
      type: object
      properties:
        page:
          type: integer
        type:
          type: string
        language:
          type: string
        encoding:
          type: string
        charset:
          type: string
        previewer:
          type: string
        width:
          type: integer
        height:
          type: integer
      additionalProperties: false
    Access1:
      type: object
      properties:
        hidden:
          type: boolean
      additionalProperties: false
    Processor:
      type: object
      properties:
        type:
          type: string
        status:
          type: string
        source_file_id:
          type: string
        props:
          type: object
          additionalProperties: {}
      additionalProperties: false
    File:
      type: object
      properties:
        id:
          type: string
        checksum:
          type: string
        ext:
          type: string
        size:
          type: integer
        mimetype:
          type: string
        storage_class:
          type: string
        key:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        access:
          $ref: '#/components/schemas/Access1'
        processor:
          $ref: '#/components/schemas/Processor'
      additionalProperties: false
    Files:
      type: object
      properties:
        enabled:
          type: boolean
        default_preview:
          type: string
          nullable: true
        order:
          type: array
          items:
            type: string
        count:
          type: integer
          readOnly: true
        total_bytes:
          type: integer
          readOnly: true
        entries:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/File'
      additionalProperties: false
    RemovalReason1:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    Agent1:
      type: object
      properties:
        user:
          type: string
      required:
      - user
      additionalProperties: false
    Tombstone1:
      type: object
      properties:
        removal_reason:
          $ref: '#/components/schemas/RemovalReason1'
        note:
          type: string
        removed_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Agent1'
        removal_date:
          type: string
          format: date
          readOnly: true
        citation_text:
          type: string
        is_visible:
          type: boolean
      additionalProperties: false
    DeletionStatus1:
      type: object
      properties:
        is_deleted:
          type: boolean
          readOnly: true
        status:
          type: string
          readOnly: true
      additionalProperties: false
    InternalNote:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          readOnly: true
        added_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Agent'
        note:
          type: string
    PartialStats:
      type: object
      properties:
        views:
          type: integer
        unique_views:
          type: integer
        downloads:
          type: integer
        unique_downloads:
          type: integer
        data_volume:
          type: number
      additionalProperties: false
    Stats:
      type: object
      properties:
        this_version:
          $ref: '#/components/schemas/PartialStats'
        all_versions:
          $ref: '#/components/schemas/PartialStats'
      additionalProperties: false
    PropsSchema:
      type: object
      properties:
        url:
          type: string
        scheme:
          type: string
      additionalProperties: false
    TaskParameterSchema:
      type: object
      properties:
        name:
          type: string
        default:
          readOnly: true
        kind:
          type: string
      additionalProperties: false
    RemovalReasonSchema:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
