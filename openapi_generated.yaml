# -*- coding: utf-8 -*-
#
# Copyright (C) 2025 KTH Royal Institute of Technology.
# Copyright (C) 2025 CERN.
#
# Invenio-openapi is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

info:
  description: '## **Summary**


    The following document is a reference guide for all the REST APIs that InvenioRDM
    exposes.


    ## **Resources**


    - üìö [Product documentation](https://inveniordm.docs.cern.ch)

    - üîó [OpenAPI GitHub repository](https://github.com/inveniosoftware/invenio-openapi)

    - üåê [Invenio project](https://inveniosoftware.org)

    - üí¨ [Community support](https://inveniordm-dev.docs.cern.ch/install/troubleshoot/)

    '
  contact:
    name: InvenioRDM Community
    url: https://inveniosoftware.org/
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Invenio REST API
  version: 13.0.0
servers:
- url: https://localhost:5000
  description: InvenioRDM instance
paths:
  /ping:
    get:
      tags:
      - Misc
      summary: Load balancer ping view.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /communities:
    get:
      tags:
      - Communities
      summary: GET /communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/CommunitySchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Filter by community type
      - name: featured
        in: query
        required: false
        schema:
          type: boolean
        description: Filter featured communities
    post:
      tags:
      - Communities
      summary: POST /communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
  /communities/{pid_value}:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Communities
      summary: DELETE /communities/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Communities
      summary: PUT /communities/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /user/communities:
    get:
      tags:
      - Communities
      summary: GET /user/communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/CommunitySchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Filter by community type
      - name: featured
        in: query
        required: false
        schema:
          type: boolean
        description: Filter featured communities
  /communities/{pid_value}/rename:
    post:
      tags:
      - Communities
      summary: POST /communities/{pid_value}/rename
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/logo:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}/logo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Communities
      summary: DELETE /communities/{pid_value}/logo
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Communities
      summary: PUT /communities/{pid_value}/logo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/featured:
    get:
      tags:
      - Communities
      summary: GET /communities/featured
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/CommunitySchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Filter by community type
      - name: featured
        in: query
        required: false
        schema:
          type: boolean
        description: Filter featured communities
  /communities/{pid_value}/featured:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}/featured
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Communities
      summary: POST /communities/{pid_value}/featured
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/featured/{featured_id}:
    delete:
      tags:
      - Communities
      summary: DELETE /communities/{pid_value}/featured/{featured_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: featured_id
        in: path
        required: true
        schema:
          type: string
        description: The featured_id identifier
    put:
      tags:
      - Communities
      summary: PUT /communities/{pid_value}/featured/{featured_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: featured_id
        in: path
        required: true
        schema:
          type: string
        description: The featured_id identifier
  /communities/{pid_value}/requests:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}/requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/restore:
    post:
      tags:
      - Communities
      summary: POST /communities/{pid_value}/restore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/subcommunities:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}/subcommunities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/members:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}/members
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Communities
      summary: DELETE /communities/{pid_value}/members
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Communities
      summary: PUT /communities/{pid_value}/members
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Communities
      summary: POST /communities/{pid_value}/members
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/members/public:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}/members/public
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/invitations:
    get:
      tags:
      - Communities
      summary: GET /communities/{pid_value}/invitations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Communities
      summary: PUT /communities/{pid_value}/invitations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Communities
      summary: POST /communities/{pid_value}/invitations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/membership-requests:
    post:
      tags:
      - Communities
      summary: POST /communities/{pid_value}/membership-requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /communities/{pid_value}/actions/join-request:
    post:
      tags:
      - Communities
      summary: POST /communities/{pid_value}/actions/join-request
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /hooks/receivers/{receiver_id}/events/:
    post:
      tags:
      - Misc
      summary: Receiver event hook.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEventSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEventSchema'
      parameters:
      - name: receiver_id
        in: path
        required: true
        schema:
          type: string
        description: The receiver_id identifier
  /hooks/receivers/{receiver_id}/events/{event_id}:
    get:
      tags:
      - Misc
      summary: Event resource.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEventSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: receiver_id
        in: path
        required: true
        schema:
          type: string
        description: The receiver_id identifier
      - name: event_id
        in: path
        required: true
        schema:
          type: string
        description: The event_id identifier
    delete:
      tags:
      - Misc
      summary: Event resource.
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: receiver_id
        in: path
        required: true
        schema:
          type: string
        description: The receiver_id identifier
      - name: event_id
        in: path
        required: true
        schema:
          type: string
        description: The event_id identifier
  /banners/:
    get:
      tags:
      - Misc
      summary: GET /banners/
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /banners/
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                category:
                  type: string
                  enum:
                  - info
                  - warning
                  - error
                  - success
                start_datetime:
                  type: string
                  format: date-time
                end_datetime:
                  type: string
                  format: date-time
                url_path:
                  type: string
                active:
                  type: boolean
                  default: true
              required:
              - message
              - category
  /banners/{banner_id}:
    get:
      tags:
      - Misc
      summary: GET /banners/{banner_id}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: banner_id
        in: path
        required: true
        schema:
          type: string
        description: The banner_id identifier
    delete:
      tags:
      - Misc
      summary: DELETE /banners/{banner_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: banner_id
        in: path
        required: true
        schema:
          type: string
        description: The banner_id identifier
    put:
      tags:
      - Misc
      summary: PUT /banners/{banner_id}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: banner_id
        in: path
        required: true
        schema:
          type: string
        description: The banner_id identifier
  /vocabularies/{type}:
    get:
      tags:
      - Vocabularies
      summary: GET /vocabularies/{type}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VocabularySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: path
        required: true
        schema:
          type: string
        description: The type identifier
    post:
      tags:
      - Vocabularies
      summary: POST /vocabularies/{type}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VocabularySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: object
                  properties:
                    en:
                      type: string
                description:
                  type: object
                  properties:
                    en:
                      type: string
                icon:
                  type: string
                props:
                  type: object
                tags:
                  type: array
                  items:
                    type: string
              required:
              - id
              - title
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
        description: The type identifier
  /vocabularies/{type}/{pid_value}:
    get:
      tags:
      - Vocabularies
      summary: GET /vocabularies/{type}/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VocabularySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
        description: The type identifier
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Vocabularies
      summary: DELETE /vocabularies/{type}/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
        description: The type identifier
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Vocabularies
      summary: PUT /vocabularies/{type}/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VocabularySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VocabularySchema'
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
        description: The type identifier
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /vocabularies/tasks:
    post:
      tags:
      - Vocabularies
      summary: POST /vocabularies/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VocabularySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                config:
                  type: object
                title:
                  type: string
                description:
                  type: string
              required:
              - type
  /affiliations:
    get:
      tags:
      - Misc
      summary: GET /affiliations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AffiliationRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /affiliations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliationRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffiliationRelation'
  /affiliations/{pid_value}:
    get:
      tags:
      - Misc
      summary: GET /affiliations/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliationRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Misc
      summary: DELETE /affiliations/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Misc
      summary: PUT /affiliations/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliationRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffiliationRelation'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /awards:
    get:
      tags:
      - Misc
      summary: GET /awards
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwardRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /awards
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwardRelation'
  /awards/{pid_value}:
    get:
      tags:
      - Misc
      summary: GET /awards/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Misc
      summary: DELETE /awards/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Misc
      summary: PUT /awards/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwardRelation'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /funders:
    get:
      tags:
      - Misc
      summary: GET /funders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FunderRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /funders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunderRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunderRelation'
  /funders/{pid_value}:
    get:
      tags:
      - Misc
      summary: GET /funders/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunderRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Misc
      summary: DELETE /funders/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Misc
      summary: PUT /funders/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunderRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunderRelation'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /vocabularies/:
    get:
      tags:
      - Vocabularies
      summary: GET /vocabularies/
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VocabularySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /names:
    get:
      tags:
      - Misc
      summary: GET /names
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /names
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /names/{pid_value}:
    get:
      tags:
      - Misc
      summary: GET /names/{pid_value}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Misc
      summary: DELETE /names/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Misc
      summary: PUT /names/{pid_value}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /names/{pid_type}/{pid_value}:
    get:
      tags:
      - Misc
      summary: GET /names/{pid_type}/{pid_value}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_type
        in: path
        required: true
        schema:
          type: string
        description: The pid_type identifier
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /subjects:
    get:
      tags:
      - Misc
      summary: GET /subjects
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /subjects
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectRelation'
  /subjects/{pid_value}:
    get:
      tags:
      - Misc
      summary: GET /subjects/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Misc
      summary: DELETE /subjects/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Misc
      summary: PUT /subjects/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectRelation'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectRelation'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /iiif/{uuid}/manifest:
    get:
      tags:
      - Misc
      summary: GET /iiif/{uuid}/manifest
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: The uuid identifier
  /iiif/{uuid}/sequence/default:
    get:
      tags:
      - Misc
      summary: GET /iiif/{uuid}/sequence/default
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: The uuid identifier
  /iiif/{uuid}/canvas/{file_name}:
    get:
      tags:
      - Misc
      summary: GET /iiif/{uuid}/canvas/{file_name}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: The uuid identifier
      - name: file_name
        in: path
        required: true
        schema:
          type: string
        description: The file_name identifier
  /iiif/{uuid}:
    get:
      tags:
      - Misc
      summary: GET /iiif/{uuid}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: The uuid identifier
  /iiif/{uuid}/info.json:
    get:
      tags:
      - Misc
      summary: GET /iiif/{uuid}/info.json
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: The uuid identifier
  /iiif/{uuid}/{region}/{size}/{rotation}/{quality}.{image_format}:
    get:
      tags:
      - Misc
      summary: GET /iiif/{uuid}/{region}/{size}/{rotation}/{quality}.{image_format}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: The uuid identifier
      - name: region
        in: path
        required: true
        schema:
          type: string
        description: The region identifier
      - name: size
        in: path
        required: true
        schema:
          type: string
        description: The size identifier
      - name: rotation
        in: path
        required: true
        schema:
          type: string
        description: The rotation identifier
      - name: quality
        in: path
        required: true
        schema:
          type: string
        description: The quality identifier
      - name: image_format
        in: path
        required: true
        schema:
          type: string
        description: The image_format identifier
  /oaipmh/sets:
    get:
      tags:
      - OAI-PMH
      summary: GET /oaipmh/sets
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseTransfer'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - OAI-PMH
      summary: POST /oaipmh/sets
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTransfer'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTransfer'
  /oaipmh/sets/{id}:
    get:
      tags:
      - OAI-PMH
      summary: GET /oaipmh/sets/{id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTransfer'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
    delete:
      tags:
      - OAI-PMH
      summary: DELETE /oaipmh/sets/{id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
    put:
      tags:
      - OAI-PMH
      summary: PUT /oaipmh/sets/{id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTransfer'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTransfer'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /oaipmh/formats:
    get:
      tags:
      - OAI-PMH
      summary: GET /oaipmh/formats
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /communities/{pid_value}/records:
    get:
      tags:
      - Records
      summary: GET /communities/{pid_value}/records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Records
      summary: DELETE /communities/{pid_value}/records
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/communities:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/communities
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/communities
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunitySchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/communities-suggestions:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/communities-suggestions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunitySchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{record_pid}/requests:
    get:
      tags:
      - Records
      summary: GET /records/{record_pid}/requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: record_pid
        in: path
        required: true
        schema:
          type: string
        description: The record_pid identifier
  /records:
    get:
      tags:
      - Records
      summary: GET /records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/RDMRecordSchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Filter by record type
      - name: access
        in: query
        required: false
        schema:
          type: string
          enum:
          - public
          - restricted
        description: Filter by access level
      - name: created
        in: query
        required: false
        schema:
          type: string
        description: Filter by creation date range
    post:
      tags:
      - Records
      summary: POST /records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
  /records/{pid_value}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/versions:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/versions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/versions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/versions/latest:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/versions/latest
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/draft:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/draft
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/draft
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/draft/actions/publish:
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft/actions/publish
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /user/records:
    get:
      tags:
      - Records
      summary: GET /user/records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/RDMRecordSchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Filter by record type
      - name: access
        in: query
        required: false
        schema:
          type: string
          enum:
          - public
          - restricted
        description: Filter by access level
      - name: created
        in: query
        required: false
        schema:
          type: string
        description: Filter by creation date range
  /records/{pid_value}/draft/actions/files-import:
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft/actions/files-import
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/draft/pids/{scheme}:
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/draft/pids/{scheme}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: scheme
        in: path
        required: true
        schema:
          type: string
        description: The scheme identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft/pids/{scheme}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: scheme
        in: path
        required: true
        schema:
          type: string
        description: The scheme identifier
  /records/{pid_value}/draft/review:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft/review
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/draft/review
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/draft/review
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/draft/actions/submit-review:
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft/actions/submit-review
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/access/request:
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/access/request
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/access:
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/access
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/delete:
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/restore:
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/restore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/quota:
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/quota
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /users/{pid_value}/quota:
    post:
      tags:
      - Users
      summary: POST /users/{pid_value}/quota
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/revisions:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/revisions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/revisions/{revision_id}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/revisions/{revision_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: revision_id
        in: path
        required: true
        schema:
          type: string
        description: The revision_id identifier
  /records/{pid_value}/draft/files:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft/files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/draft/files
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft/files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{key}:
    get:
      tags:
      - Records
      summary: GET /records/{key}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/RDMRecordSchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Filter by record type
      - name: access
        in: query
        required: false
        schema:
          type: string
          enum:
          - public
          - restricted
        description: Filter by access level
      - name: created
        in: query
        required: false
        schema:
          type: string
        description: Filter by creation date range
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{key}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    put:
      tags:
      - Records
      summary: PUT /records/{key}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{key}/content:
    get:
      tags:
      - Records
      summary: GET /records/{key}/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/RDMRecordSchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: type
        in: query
        required: false
        schema:
          type: string
        description: Filter by record type
      - name: access
        in: query
        required: false
        schema:
          type: string
          enum:
          - public
          - restricted
        description: Filter by access level
      - name: created
        in: query
        required: false
        schema:
          type: string
        description: Filter by creation date range
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    put:
      tags:
      - Records
      summary: PUT /records/{key}/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{pid_value}/draft/files-archive:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft/files-archive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{key}/commit:
    post:
      tags:
      - Records
      summary: POST /records/{key}/commit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{key}/content/{part}:
    put:
      tags:
      - Records
      summary: PUT /records/{key}/content/{part}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
      - name: part
        in: path
        required: true
        schema:
          type: string
        description: The part identifier
  /records/{pid_value}/draft/media-files:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft/media-files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/draft/media-files
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft/media-files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/draft/media-files/{key}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft/media-files/{key}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/draft/media-files/{key}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/draft/media-files/{key}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{pid_value}/draft/media-files/{key}/content:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft/media-files/{key}/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/draft/media-files/{key}/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{pid_value}/draft/media-files-archive:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/draft/media-files-archive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/draft/media-files/{key}/commit:
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/draft/media-files/{key}/commit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{pid_value}/access/groups/{subject_id}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/groups/{subject_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
        description: The subject_id identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/access/groups/{subject_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
        description: The subject_id identifier
    patch:
      tags:
      - Records
      summary: PATCH /records/{pid_value}/access/groups/{subject_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
        description: The subject_id identifier
  /records/{pid_value}/access/groups:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/groups
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/access/grants:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/grants
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/access/grants
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/access/grants/{grant_id}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/grants/{grant_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
        description: The grant_id identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/access/grants/{grant_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
        description: The grant_id identifier
    patch:
      tags:
      - Records
      summary: PATCH /records/{pid_value}/access/grants/{grant_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
        description: The grant_id identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/access/grants/{grant_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: grant_id
        in: path
        required: true
        schema:
          type: string
        description: The grant_id identifier
  /records/{pid_value}/access/links:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/links
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    post:
      tags:
      - Records
      summary: POST /records/{pid_value}/access/links
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/access/links/{link_id}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/links/{link_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: link_id
        in: path
        required: true
        schema:
          type: string
        description: The link_id identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/access/links/{link_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: link_id
        in: path
        required: true
        schema:
          type: string
        description: The link_id identifier
    patch:
      tags:
      - Records
      summary: PATCH /records/{pid_value}/access/links/{link_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: link_id
        in: path
        required: true
        schema:
          type: string
        description: The link_id identifier
    put:
      tags:
      - Records
      summary: PUT /records/{pid_value}/access/links/{link_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: link_id
        in: path
        required: true
        schema:
          type: string
        description: The link_id identifier
  /records/{pid_value}/files:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/files-archive:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/files-archive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/media-files:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/media-files
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/media-files/{key}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/media-files/{key}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{pid_value}/media-files/{key}/content:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/media-files/{key}/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /records/{pid_value}/media-files-archive:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/media-files-archive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /records/{pid_value}/access/users/{subject_id}:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/users/{subject_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
        description: The subject_id identifier
    delete:
      tags:
      - Records
      summary: DELETE /records/{pid_value}/access/users/{subject_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
        description: The subject_id identifier
    patch:
      tags:
      - Records
      summary: PATCH /records/{pid_value}/access/users/{subject_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDMRecordSchema'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
      - name: subject_id
        in: path
        required: true
        schema:
          type: string
        description: The subject_id identifier
  /records/{pid_value}/access/users:
    get:
      tags:
      - Records
      summary: GET /records/{pid_value}/access/users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /files:
    post:
      tags:
      - Files
      summary: Service resource.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileSchema'
  /files/{bucket_id}:
    get:
      tags:
      - Files
      summary: Bucket item resource.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
        description: The bucket_id identifier
  /files/{bucket_id}/{key}:
    get:
      tags:
      - Files
      summary: Object item resource.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
        description: The bucket_id identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    delete:
      tags:
      - Files
      summary: Object item resource.
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
        description: The bucket_id identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    put:
      tags:
      - Files
      summary: Object item resource.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileSchema'
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
        description: The bucket_id identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
    post:
      tags:
      - Files
      summary: Object item resource.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileSchema'
      parameters:
      - name: bucket_id
        in: path
        required: true
        schema:
          type: string
        description: The bucket_id identifier
      - name: key
        in: path
        required: true
        schema:
          type: string
        description: The key identifier
  /pages:
    get:
      tags:
      - Misc
      summary: GET /pages
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /pages
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                template_name:
                  type: string
                url:
                  type: string
                description:
                  type: string
              required:
              - title
              - content
              - url
  /pages/{id}:
    get:
      tags:
      - Misc
      summary: GET /pages/{id}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
    delete:
      tags:
      - Misc
      summary: DELETE /pages/{id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
    put:
      tags:
      - Misc
      summary: PUT /pages/{id}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /oauth/static/{filename}:
    get:
      tags:
      - Misc
      summary: The view function used to serve files from
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: filename
        in: path
        required: true
        schema:
          type: string
        description: The filename identifier
  /oauth/login/{remote_app}/:
    get:
      tags:
      - Misc
      summary: Send user to remote application for authentication.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
        description: The remote_app identifier
  /oauth/authorized/{remote_app}/:
    get:
      tags:
      - Misc
      summary: Authorized handler callback.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
        description: The remote_app identifier
  /oauth/signup/{remote_app}/:
    get:
      tags:
      - Misc
      summary: Extra signup step.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
        description: The remote_app identifier
    post:
      tags:
      - Misc
      summary: Extra signup step.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                state:
                  type: string
      parameters:
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
        description: The remote_app identifier
  /oauth/disconnect/{remote_app}/:
    get:
      tags:
      - Misc
      summary: Disconnect user from remote application.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: remote_app
        in: path
        required: true
        schema:
          type: string
        description: The remote_app identifier
  /stats:
    post:
      tags:
      - Statistics
      summary: REST API resource providing access to statistics.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletionStatus'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                views:
                  type: integer
                downloads:
                  type: integer
                recid:
                  type: string
                timestamp:
                  type: string
                  format: date-time
  /domains:
    get:
      tags:
      - Misc
      summary: GET /domains
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: POST /domains
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
  /domains/{pid_value}:
    get:
      tags:
      - Misc
      summary: GET /domains/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    delete:
      tags:
      - Misc
      summary: DELETE /domains/{pid_value}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
    put:
      tags:
      - Misc
      summary: PUT /domains/{pid_value}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      parameters:
      - name: pid_value
        in: path
        required: true
        schema:
          type: string
        description: The pid_value identifier
  /groups:
    get:
      tags:
      - Misc
      summary: GET /groups
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /groups/{id}:
    get:
      tags:
      - Misc
      summary: GET /groups/{id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /groups/{id}/avatar.svg:
    get:
      tags:
      - Misc
      summary: GET /groups/{id}/avatar.svg
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users:
    get:
      tags:
      - Users
      summary: GET /users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserSchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: domain
        in: query
        required: false
        schema:
          type: string
        description: Filter by email domain
  /users/{id}:
    get:
      tags:
      - Users
      summary: GET /users/{id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/{id}/avatar.svg:
    get:
      tags:
      - Users
      summary: GET /users/{id}/avatar.svg
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/{id}/approve:
    post:
      tags:
      - Users
      summary: POST /users/{id}/approve
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/{id}/block:
    post:
      tags:
      - Users
      summary: POST /users/{id}/block
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/{id}/restore:
    post:
      tags:
      - Users
      summary: POST /users/{id}/restore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/{id}/deactivate:
    post:
      tags:
      - Users
      summary: POST /users/{id}/deactivate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/{id}/activate:
    post:
      tags:
      - Users
      summary: POST /users/{id}/activate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/{id}/impersonate:
    post:
      tags:
      - Users
      summary: POST /users/{id}/impersonate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /users/all:
    get:
      tags:
      - Users
      summary: GET /users/all
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      hits:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserSchema'
                      total:
                        type: integer
                  links:
                    type: object
                  aggregations:
                    type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
      - name: domain
        in: query
        required: false
        schema:
          type: string
        description: Filter by email domain
  /logs/jobs:
    get:
      tags:
      - Jobs
      summary: GET /logs/jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobLogEntry'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /jobs:
    get:
      tags:
      - Jobs
      summary: GET /jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Jobs
      summary: POST /jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
  /jobs/{job_id}:
    get:
      tags:
      - Jobs
      summary: GET /jobs/{job_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
    delete:
      tags:
      - Jobs
      summary: DELETE /jobs/{job_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
    put:
      tags:
      - Jobs
      summary: PUT /jobs/{job_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
  /jobs/{job_id}/runs:
    get:
      tags:
      - Jobs
      summary: GET /jobs/{job_id}/runs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
    post:
      tags:
      - Jobs
      summary: POST /jobs/{job_id}/runs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
  /jobs/{job_id}/runs/{run_id}:
    get:
      tags:
      - Jobs
      summary: GET /jobs/{job_id}/runs/{run_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
      - name: run_id
        in: path
        required: true
        schema:
          type: string
        description: The run_id identifier
    delete:
      tags:
      - Jobs
      summary: DELETE /jobs/{job_id}/runs/{run_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
      - name: run_id
        in: path
        required: true
        schema:
          type: string
        description: The run_id identifier
  /jobs/{job_id}/runs/{run_id}/logs:
    get:
      tags:
      - Jobs
      summary: GET /jobs/{job_id}/runs/{run_id}/logs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
      - name: run_id
        in: path
        required: true
        schema:
          type: string
        description: The run_id identifier
  /jobs/{job_id}/runs/{run_id}/actions/stop:
    post:
      tags:
      - Jobs
      summary: POST /jobs/{job_id}/runs/{run_id}/actions/stop
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: The job_id identifier
      - name: run_id
        in: path
        required: true
        schema:
          type: string
        description: The run_id identifier
  /tasks:
    get:
      tags:
      - Misc
      summary: GET /tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /tasks/{registered_task_id}/args:
    get:
      tags:
      - Misc
      summary: GET /tasks/{registered_task_id}/args
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: registered_task_id
        in: path
        required: true
        schema:
          type: string
        description: The registered_task_id identifier
  /audit-logs/:
    get:
      tags:
      - Misc
      summary: GET /audit-logs/
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /audit-logs/{id}:
    get:
      tags:
      - Misc
      summary: GET /audit-logs/{id}
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /requests/{request_id}/comments:
    post:
      tags:
      - Requests
      summary: POST /requests/{request_id}/comments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
        description: The request_id identifier
  /requests/{request_id}/comments/{comment_id}:
    get:
      tags:
      - Requests
      summary: GET /requests/{request_id}/comments/{comment_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
        description: The request_id identifier
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
        description: The comment_id identifier
    delete:
      tags:
      - Requests
      summary: DELETE /requests/{request_id}/comments/{comment_id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
        description: The request_id identifier
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
        description: The comment_id identifier
    put:
      tags:
      - Requests
      summary: PUT /requests/{request_id}/comments/{comment_id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
        description: The request_id identifier
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
        description: The comment_id identifier
  /requests/{request_id}/timeline:
    get:
      tags:
      - Requests
      summary: GET /requests/{request_id}/timeline
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: request_id
        in: path
        required: true
        schema:
          type: string
        description: The request_id identifier
  /requests/:
    get:
      tags:
      - Requests
      summary: GET /requests/
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /requests/{id}:
    get:
      tags:
      - Requests
      summary: GET /requests/{id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
    delete:
      tags:
      - Requests
      summary: DELETE /requests/{id}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
    put:
      tags:
      - Requests
      summary: PUT /requests/{id}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
  /requests/{id}/actions/{action}:
    post:
      tags:
      - Requests
      summary: POST /requests/{id}/actions/{action}
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSchema'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
      - name: action
        in: path
        required: true
        schema:
          type: string
        description: The action identifier
  /user/requests:
    get:
      tags:
      - Requests
      summary: GET /user/requests
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /login:
    post:
      tags:
      - Misc
      summary: View to login a user.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                remember:
                  type: boolean
                  default: false
              required:
              - email
              - password
  /logout:
    get:
      tags:
      - Misc
      summary: View to logout a user.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
    post:
      tags:
      - Misc
      summary: View to logout a user.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /me:
    get:
      tags:
      - Misc
      summary: View to fetch info from current user.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /register:
    post:
      tags:
      - Misc
      summary: View to register a new user.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                password_confirm:
                  type: string
                  minLength: 8
                profile:
                  type: object
                  properties:
                    full_name:
                      type: string
                    affiliations:
                      type: string
              required:
              - email
              - password
              - password_confirm
  /change-password:
    post:
      tags:
      - Misc
      summary: View to change the user password.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                new_password:
                  type: string
                  minLength: 8
                new_password_confirm:
                  type: string
                  minLength: 8
              required:
              - current_password
              - new_password
              - new_password_confirm
  /forgot-password:
    post:
      tags:
      - Misc
      summary: View to get a link to reset the user password.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
  /reset-password:
    post:
      tags:
      - Misc
      summary: View to reset the user password.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
                  minLength: 8
                password_confirm:
                  type: string
                  minLength: 8
              required:
              - token
              - password
              - password_confirm
  /send-confirmation-email:
    post:
      tags:
      - Misc
      summary: View function which sends confirmation instructions.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
  /confirm-email:
    post:
      tags:
      - Misc
      summary: View that handles a email confirmation request.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
  /sessions:
    get:
      tags:
      - Misc
      summary: View that returns the list of user sessions.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query
      - name: sort
        in: query
        required: false
        schema:
          type: string
        description: Sort order (e.g., 'bestmatch', 'newest', 'oldest')
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
        description: Number of results per page
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number
  /sessions/{sid_s}:
    delete:
      tags:
      - Misc
      summary: View for operations related to user session.
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: sid_s
        in: path
        required: true
        schema:
          type: string
        description: The sid_s identifier
  /collections/{id}/records:
    get:
      tags:
      - Records
      summary: GET /collections/{id}/records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDMRecordSchema'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The id identifier
tags:
- name: Communities
  description: Research communities and collections
- name: Files
  description: File management and storage
- name: Jobs
  description: Background jobs and tasks
- name: Misc
  description: Miscellaneous endpoints
- name: OAI-PMH
  description: OAI-PMH metadata harvesting
- name: Records
  description: Published research records and publications
- name: Requests
  description: Workflow requests and approvals
- name: Statistics
  description: Usage and download statistics
- name: Users
  description: User accounts and profiles
- name: Vocabularies
  description: Controlled vocabularies and taxonomies
openapi: 3.0.3
components:
  schemas:
    VocabularyRelation:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    Identifier:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
      additionalProperties: false
    PersonOrOrganization:
      type: object
      properties:
        name:
          type: string
        given_name:
          type: string
        family_name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
      required:
      - type
      additionalProperties: false
    AffiliationRelation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        identifiers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    Creator:
      type: object
      properties:
        person_or_org:
          $ref: '#/components/schemas/PersonOrOrganization'
        role:
          $ref: '#/components/schemas/VocabularyRelation'
        affiliations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelation'
      required:
      - person_or_org
      additionalProperties: false
    Title:
      type: object
      properties:
        title:
          type: string
          minLength: 3
        lang:
          $ref: '#/components/schemas/VocabularyRelation'
      required:
      - title
      - type
      additionalProperties: false
    SubjectRelation:
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
        scheme:
          type: string
          readOnly: true
        title:
          type: object
          readOnly: true
          additionalProperties: {}
        props:
          type: object
          readOnly: true
          additionalProperties: {}
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        synonyms:
          type: array
          readOnly: true
          items:
            type: string
    Contributor:
      type: object
      properties:
        person_or_org:
          $ref: '#/components/schemas/PersonOrOrganization'
        role:
          $ref: '#/components/schemas/VocabularyRelation'
        affiliations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelation'
      required:
      - person_or_org
      - role
      additionalProperties: false
    Date:
      type: object
      properties:
        date:
          type: string
        description:
          type: string
      required:
      - date
      - type
      additionalProperties: false
    RelatedIdentifier:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
        relation_type:
          $ref: '#/components/schemas/VocabularyRelation'
        resource_type:
          $ref: '#/components/schemas/VocabularyRelation'
      additionalProperties: false
    Props:
      type: object
      properties:
        url:
          type: string
        scheme:
          type: string
      additionalProperties: false
    Rights:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          additionalProperties: {}
        description:
          type: object
          additionalProperties: {}
        icon:
          type: string
          readOnly: true
        props:
          $ref: '#/components/schemas/Props'
        link:
          type: string
      additionalProperties: false
    Description:
      type: object
      properties:
        description:
          type: string
          minLength: 3
        lang:
          $ref: '#/components/schemas/VocabularyRelation'
      required:
      - description
      - type
      additionalProperties: false
    GeometryObject:
      type: object
      properties: {}
      additionalProperties: false
    Location:
      type: object
      properties:
        geometry:
          $ref: '#/components/schemas/GeometryObject'
        place:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        description:
          type: string
      additionalProperties: false
    Feature:
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/Location'
      additionalProperties: false
    FunderRelation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 1
      additionalProperties: false
    AwardRelation:
      type: object
      properties:
        id:
          type: string
        number:
          type: string
        title:
          type: object
          additionalProperties:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        acronym:
          type: string
        program:
          type: string
      additionalProperties: false
    Funding:
      type: object
      properties:
        funder:
          $ref: '#/components/schemas/FunderRelation'
        award:
          $ref: '#/components/schemas/AwardRelation'
      required:
      - funder
      additionalProperties: false
    Reference:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
        reference:
          type: string
      required:
      - reference
      additionalProperties: false
    Metadata:
      type: object
      properties:
        resource_type:
          $ref: '#/components/schemas/VocabularyRelation'
        creators:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Creator'
        title:
          type: string
          minLength: 3
        additional_titles:
          type: array
          items:
            $ref: '#/components/schemas/Title'
        publisher:
          type: string
        publication_date:
          type: string
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/SubjectRelation'
        contributors:
          type: array
          items:
            $ref: '#/components/schemas/Contributor'
        dates:
          type: array
          items:
            $ref: '#/components/schemas/Date'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/VocabularyRelation'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        related_identifiers:
          type: array
          items:
            $ref: '#/components/schemas/RelatedIdentifier'
        sizes:
          type: array
          items:
            type: string
            minLength: 1
        formats:
          type: array
          items:
            type: string
            minLength: 1
        version:
          type: string
        rights:
          type: array
          items:
            $ref: '#/components/schemas/Rights'
        copyright:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 3
        additional_descriptions:
          type: array
          items:
            $ref: '#/components/schemas/Description'
        locations:
          $ref: '#/components/schemas/Feature'
        funding:
          type: array
          items:
            $ref: '#/components/schemas/Funding'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
      - creators
      - publication_date
      - resource_type
      - title
      additionalProperties: false
    MetadataSchema:
      type: object
      properties:
        resource_type:
          $ref: '#/components/schemas/VocabularyRelation'
        creators:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Creator'
        title:
          type: string
          minLength: 3
        additional_titles:
          type: array
          items:
            $ref: '#/components/schemas/Title'
        publisher:
          type: string
        publication_date:
          type: string
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/SubjectRelation'
        contributors:
          type: array
          items:
            $ref: '#/components/schemas/Contributor'
        dates:
          type: array
          items:
            $ref: '#/components/schemas/Date'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/VocabularyRelation'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        related_identifiers:
          type: array
          items:
            $ref: '#/components/schemas/RelatedIdentifier'
        sizes:
          type: array
          items:
            type: string
            minLength: 1
        formats:
          type: array
          items:
            type: string
            minLength: 1
        version:
          type: string
        rights:
          type: array
          items:
            $ref: '#/components/schemas/Rights'
        copyright:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 3
        additional_descriptions:
          type: array
          items:
            $ref: '#/components/schemas/Description'
        locations:
          $ref: '#/components/schemas/Feature'
        funding:
          type: array
          items:
            $ref: '#/components/schemas/Funding'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
      - creators
      - publication_date
      - resource_type
      - title
      additionalProperties: false
    GrantSubject:
      type: object
      properties:
        id:
          type: string
      required:
      - id
      - type
      additionalProperties: false
    Grant:
      type: object
      properties:
        permission:
          type: string
        subject:
          $ref: '#/components/schemas/GrantSubject'
        origin:
          type: string
        message:
          type: string
        notify:
          type: boolean
      required:
      - permission
      - subject
      additionalProperties: false
    Agent:
      type: object
      properties:
        user:
          type: string
      required:
      - user
      additionalProperties: false
    SecretLink:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date
        permission:
          type: string
          enum:
          - view
          - preview
          - edit
        description:
          type: string
        origin:
          type: string
        token:
          type: string
          readOnly: true
      additionalProperties: false
    AccessSettings:
      type: object
      properties:
        allow_user_requests:
          type: boolean
        allow_guest_requests:
          type: boolean
        accept_conditions_text:
          type: string
          nullable: true
        secret_link_expiration:
          type: integer
          minimum: 0
          maximum: 365
      additionalProperties: false
    ParentAccess:
      type: object
      properties:
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
        owned_by:
          $ref: '#/components/schemas/Agent'
        links:
          type: array
          items:
            $ref: '#/components/schemas/SecretLink'
        settings:
          $ref: '#/components/schemas/AccessSettings'
      additionalProperties: false
    GenericRequest:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        number:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        is_closed:
          type: boolean
          readOnly: true
        is_open:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        created_by:
          type: object
          additionalProperties: {}
        receiver:
          type: object
          additionalProperties: {}
        topic:
          type: object
          additionalProperties: {}
      additionalProperties: false
    FundingRelation:
      type: object
      properties:
        funder:
          $ref: '#/components/schemas/FunderRelation'
        award:
          $ref: '#/components/schemas/AwardRelation'
      additionalProperties: false
    AffiliationRelation1:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        identifiers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Identifier'
    CommunityMetadata:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 250
        description:
          type: string
          minLength: 1
          maxLength: 250
        curation_policy:
          type: string
          maxLength: 50000
        page:
          type: string
          maxLength: 50000
        website:
          type: string
          minLength: 1
        funding:
          type: array
          items:
            $ref: '#/components/schemas/FundingRelation'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelation1'
      required:
      - title
      additionalProperties: false
    CommunityAccess:
      type: object
      properties:
        visibility:
          type: string
          enum:
          - public
          - restricted
        members_visibility:
          type: string
          enum:
          - public
          - restricted
        member_policy:
          type: string
          enum:
          - open
          - closed
        record_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        record_submission_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        review_policy:
          type: string
          enum:
          - open
          - closed
          - members
      additionalProperties: false
    CustomFields:
      type: object
      properties: {}
      additionalProperties: false
    CommunityThemeStyle:
      type: object
      properties:
        font:
          type: object
          additionalProperties: {}
        primaryColor:
          type: string
        secondaryColor:
          type: string
        tertiaryColor:
          type: string
        primaryTextColor:
          type: string
        secondaryTextColor:
          type: string
        tertiaryTextColor:
          type: string
        mainHeaderBackgroundColor:
          type: string
      additionalProperties: false
    CommunityTheme:
      type: object
      properties:
        style:
          $ref: '#/components/schemas/CommunityThemeStyle'
        brand:
          type: string
        enabled:
          type: boolean
      additionalProperties: false
    RemovalReason:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    Agent1:
      type: object
      properties:
        user:
          type: string
      required:
      - user
      additionalProperties: false
    Tombstone:
      type: object
      properties:
        removal_reason:
          $ref: '#/components/schemas/RemovalReason'
        note:
          type: string
        removed_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Agent1'
        removal_date:
          type: string
          format: date
          readOnly: true
        citation_text:
          type: string
        is_visible:
          type: boolean
      additionalProperties: false
    DeletionStatus:
      type: object
      properties:
        is_deleted:
          type: boolean
          readOnly: true
        status:
          type: string
          readOnly: true
      additionalProperties: false
    Children:
      type: object
      properties:
        allow:
          type: boolean
      additionalProperties: false
    CommunityParent:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadata'
        access:
          $ref: '#/components/schemas/CommunityAccess'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/Children'
      required:
      - access
      - metadata
      - slug
    Community:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadata'
        access:
          $ref: '#/components/schemas/CommunityAccess'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/Children'
        parent:
          readOnly: true
          anyOf:
          - $ref: '#/components/schemas/CommunityParent'
          - type: object
            nullable: true
      required:
      - access
      - metadata
      - slug
    Communities:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        default:
          type: string
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Community'
      additionalProperties: false
    PID:
      type: object
      properties:
        identifier:
          type: string
        provider:
          type: string
        client:
          type: string
      required:
      - identifier
      - provider
      additionalProperties: false
    RDMParent:
      type: object
      properties:
        id:
          type: string
        access:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ParentAccess'
        review:
          $ref: '#/components/schemas/GenericRequest'
        communities:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Communities'
        pids:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/PID'
        is_verified:
          type: boolean
          readOnly: true
      additionalProperties: false
    RDMParentSchema:
      type: object
      properties:
        id:
          type: string
        access:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ParentAccess'
        review:
          $ref: '#/components/schemas/GenericRequest'
        communities:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Communities'
        pids:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/PID'
        is_verified:
          type: boolean
          readOnly: true
      additionalProperties: false
    Versions:
      type: object
      properties:
        is_latest:
          type: boolean
        is_latest_draft:
          type: boolean
        index:
          type: integer
      additionalProperties: false
    Embargo:
      type: object
      properties:
        active:
          type: boolean
          nullable: true
        until:
          type: string
          format: date
          nullable: true
        reason:
          type: string
          nullable: true
      additionalProperties: false
    Access:
      type: object
      properties:
        record:
          type: string
        files:
          type: string
        embargo:
          $ref: '#/components/schemas/Embargo'
        status:
          type: string
      required:
      - files
      - record
      additionalProperties: false
    Metadata1:
      type: object
      properties:
        page:
          type: integer
        language:
          type: string
        encoding:
          type: string
        charset:
          type: string
        previewer:
          type: string
        width:
          type: integer
        height:
          type: integer
      additionalProperties: false
    Access1:
      type: object
      properties:
        hidden:
          type: boolean
      additionalProperties: false
    Processor:
      type: object
      properties:
        status:
          type: string
        source_file_id:
          type: string
        props:
          type: object
          additionalProperties: {}
      additionalProperties: false
    File:
      type: object
      properties:
        id:
          type: string
        checksum:
          type: string
        ext:
          type: string
        size:
          type: integer
        mimetype:
          type: string
        storage_class:
          type: string
        key:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata1'
        access:
          $ref: '#/components/schemas/Access1'
        processor:
          $ref: '#/components/schemas/Processor'
      additionalProperties: false
    Files:
      type: object
      properties:
        enabled:
          type: boolean
        default_preview:
          type: string
          nullable: true
        order:
          type: array
          items:
            type: string
        count:
          type: integer
          readOnly: true
        total_bytes:
          type: integer
          readOnly: true
        entries:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/File'
      additionalProperties: false
    RemovalReason1:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    Agent2:
      type: object
      properties:
        user:
          type: string
      required:
      - user
      additionalProperties: false
    Tombstone1:
      type: object
      properties:
        removal_reason:
          $ref: '#/components/schemas/RemovalReason1'
        note:
          type: string
        removed_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Agent2'
        removal_date:
          type: string
          format: date
          readOnly: true
        citation_text:
          type: string
        is_visible:
          type: boolean
      additionalProperties: false
    DeletionStatus1:
      type: object
      properties:
        is_deleted:
          type: boolean
          readOnly: true
        status:
          type: string
          readOnly: true
      additionalProperties: false
    InternalNote:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          readOnly: true
        added_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Agent'
        note:
          type: string
    PartialStats:
      type: object
      properties:
        views:
          type: integer
        unique_views:
          type: integer
        downloads:
          type: integer
        unique_downloads:
          type: integer
        data_volume:
          type: number
      additionalProperties: false
    Stats:
      type: object
      properties:
        this_version:
          $ref: '#/components/schemas/PartialStats'
        all_versions:
          $ref: '#/components/schemas/PartialStats'
      additionalProperties: false
    RDMRecord:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        parent:
          $ref: '#/components/schemas/RDMParentSchema'
        versions:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Versions'
        is_published:
          type: boolean
          readOnly: true
        is_draft:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          readOnly: true
        pids:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PID'
        metadata:
          $ref: '#/components/schemas/MetadataSchema'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        access:
          $ref: '#/components/schemas/Access'
        files:
          $ref: '#/components/schemas/Files'
        media_files:
          $ref: '#/components/schemas/Files'
        revision:
          type: integer
          readOnly: true
        status:
          type: string
          readOnly: true
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone1'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus1'
        internal_notes:
          type: array
          items:
            $ref: '#/components/schemas/InternalNote'
        stats:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Stats'
    RDMRecordSchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        parent:
          $ref: '#/components/schemas/RDMParentSchema'
        versions:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Versions'
        is_published:
          type: boolean
          readOnly: true
        is_draft:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          readOnly: true
        pids:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PID'
        metadata:
          $ref: '#/components/schemas/MetadataSchema'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        access:
          $ref: '#/components/schemas/Access'
        files:
          $ref: '#/components/schemas/Files'
        media_files:
          $ref: '#/components/schemas/Files'
        revision:
          type: integer
          readOnly: true
        status:
          type: string
          readOnly: true
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone1'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus1'
        internal_notes:
          type: array
          items:
            $ref: '#/components/schemas/InternalNote'
        stats:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Stats'
    AffiliationRelationSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        identifiers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    AwardRelationSchema:
      type: object
      properties:
        id:
          type: string
        number:
          type: string
        title:
          type: object
          additionalProperties:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        acronym:
          type: string
        program:
          type: string
      additionalProperties: false
    ContributorSchema:
      type: object
      properties:
        person_or_org:
          $ref: '#/components/schemas/PersonOrOrganization'
        role:
          $ref: '#/components/schemas/VocabularyRelation'
        affiliations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelationSchema'
      required:
      - person_or_org
      - role
      additionalProperties: false
    CreatorSchema:
      type: object
      properties:
        person_or_org:
          $ref: '#/components/schemas/PersonOrOrganization'
        role:
          $ref: '#/components/schemas/VocabularyRelation'
        affiliations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelationSchema'
      required:
      - person_or_org
      additionalProperties: false
    DateSchema:
      type: object
      properties:
        date:
          type: string
        description:
          type: string
      required:
      - date
      - type
      additionalProperties: false
    DescriptionSchema:
      type: object
      properties:
        description:
          type: string
          minLength: 3
        lang:
          $ref: '#/components/schemas/VocabularyRelation'
      required:
      - description
      - type
      additionalProperties: false
    FeatureSchema:
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/Location'
      additionalProperties: false
    FunderRelationSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 1
      additionalProperties: false
    FundingSchema:
      type: object
      properties:
        funder:
          $ref: '#/components/schemas/FunderRelationSchema'
        award:
          $ref: '#/components/schemas/AwardRelationSchema'
      required:
      - funder
      additionalProperties: false
    GeometryObjectSchema:
      type: object
      properties: {}
      additionalProperties: false
    LocationSchema:
      type: object
      properties:
        geometry:
          $ref: '#/components/schemas/GeometryObjectSchema'
        place:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        description:
          type: string
      additionalProperties: false
    PersonOrOrganizationSchema:
      type: object
      properties:
        name:
          type: string
        given_name:
          type: string
        family_name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
      required:
      - type
      additionalProperties: false
    Point:
      type: object
      properties:
        lat:
          type: number
        lon:
          type: number
      required:
      - lat
      - lon
      additionalProperties: false
    PointSchema:
      type: object
      properties:
        lat:
          type: number
        lon:
          type: number
      required:
      - lat
      - lon
      additionalProperties: false
    PropsSchema:
      type: object
      properties:
        url:
          type: string
        scheme:
          type: string
      additionalProperties: false
    ReferenceSchema:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
        reference:
          type: string
      required:
      - reference
      additionalProperties: false
    RelatedIdentifierSchema:
      type: object
      properties:
        identifier:
          type: string
        scheme:
          type: string
        relation_type:
          $ref: '#/components/schemas/VocabularyRelation'
        resource_type:
          $ref: '#/components/schemas/VocabularyRelation'
      additionalProperties: false
    RightsSchema:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          additionalProperties: {}
        description:
          type: object
          additionalProperties: {}
        icon:
          type: string
          readOnly: true
        props:
          $ref: '#/components/schemas/PropsSchema'
        link:
          type: string
      additionalProperties: false
    SubjectRelationSchema:
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
        scheme:
          type: string
          readOnly: true
        title:
          type: object
          readOnly: true
          additionalProperties: {}
        props:
          type: object
          readOnly: true
          additionalProperties: {}
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        synonyms:
          type: array
          readOnly: true
          items:
            type: string
    TitleSchema:
      type: object
      properties:
        title:
          type: string
          minLength: 3
        lang:
          $ref: '#/components/schemas/VocabularyRelation'
      required:
      - title
      - type
      additionalProperties: false
    Vocabulary:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    VocabularySchema:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    CommunitiesSchema:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        default:
          type: string
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Community'
      additionalProperties: false
    GenericRequestSchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        number:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        is_closed:
          type: boolean
          readOnly: true
        is_open:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        created_by:
          type: object
          additionalProperties: {}
        receiver:
          type: object
          additionalProperties: {}
        topic:
          type: object
          additionalProperties: {}
      additionalProperties: false
    PIDSchema:
      type: object
      properties:
        identifier:
          type: string
        provider:
          type: string
        client:
          type: string
      required:
      - identifier
      - provider
      additionalProperties: false
    ParentAccessSchema:
      type: object
      properties:
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
        owned_by:
          $ref: '#/components/schemas/Agent'
        links:
          type: array
          items:
            $ref: '#/components/schemas/SecretLink'
        settings:
          $ref: '#/components/schemas/AccessSettings'
      additionalProperties: false
    Parent:
      type: object
      properties:
        id:
          type: string
      additionalProperties: false
    ParentSchema:
      type: object
      properties:
        id:
          type: string
      additionalProperties: false
    AccessSchema:
      type: object
      properties:
        record:
          type: string
        files:
          type: string
        embargo:
          $ref: '#/components/schemas/Embargo'
        status:
          type: string
      required:
      - files
      - record
      additionalProperties: false
    EmbargoSchema:
      type: object
      properties:
        active:
          type: boolean
          nullable: true
        until:
          type: string
          format: date
          nullable: true
        reason:
          type: string
          nullable: true
      additionalProperties: false
    FileSchema:
      type: object
      properties:
        id:
          type: string
        checksum:
          type: string
        ext:
          type: string
        size:
          type: integer
        mimetype:
          type: string
        storage_class:
          type: string
        key:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata1'
        access:
          $ref: '#/components/schemas/Access1'
        processor:
          $ref: '#/components/schemas/Processor'
      additionalProperties: false
    FilesSchema:
      type: object
      properties:
        enabled:
          type: boolean
        default_preview:
          type: string
          nullable: true
        order:
          type: array
          items:
            type: string
        count:
          type: integer
          readOnly: true
        total_bytes:
          type: integer
          readOnly: true
        entries:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/FileSchema'
      additionalProperties: false
    MediaFile:
      type: object
      properties:
        id:
          type: string
        checksum:
          type: string
        ext:
          type: string
        size:
          type: integer
        mimetype:
          type: string
        storage_class:
          type: string
        key:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata1'
        access:
          $ref: '#/components/schemas/Access1'
        processor:
          $ref: '#/components/schemas/Processor'
        language:
          $ref: '#/components/schemas/VocabularySchema'
      additionalProperties: false
    MediaFileSchema:
      type: object
      properties:
        id:
          type: string
        checksum:
          type: string
        ext:
          type: string
        size:
          type: integer
        mimetype:
          type: string
        storage_class:
          type: string
        key:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata1'
        access:
          $ref: '#/components/schemas/Access1'
        processor:
          $ref: '#/components/schemas/Processor'
        language:
          $ref: '#/components/schemas/VocabularySchema'
      additionalProperties: false
    ProcessorSchema:
      type: object
      properties:
        status:
          type: string
        source_file_id:
          type: string
        props:
          type: object
          additionalProperties: {}
      additionalProperties: false
    AgentSchema:
      type: object
      properties:
        user:
          type: string
      required:
      - user
      additionalProperties: false
    BaseAffiliationRelation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        identifiers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    BaseAffiliationRelationSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        identifiers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    BaseCommunity:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadata'
        access:
          $ref: '#/components/schemas/CommunityAccess'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/Children'
      required:
      - access
      - metadata
      - slug
    BaseCommunitySchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadata'
        access:
          $ref: '#/components/schemas/CommunityAccess'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/Children'
      required:
      - access
      - metadata
      - slug
    BaseGhost:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
      additionalProperties: false
    BaseGhostSchema:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
      additionalProperties: false
    BaseRecord:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
      additionalProperties: false
    BaseRecordSchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
      additionalProperties: false
    ChildrenSchema:
      type: object
      properties:
        allow:
          type: boolean
      additionalProperties: false
    CommunityAccessSchema:
      type: object
      properties:
        visibility:
          type: string
          enum:
          - public
          - restricted
        members_visibility:
          type: string
          enum:
          - public
          - restricted
        member_policy:
          type: string
          enum:
          - open
          - closed
        record_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        record_submission_policy:
          type: string
          enum:
          - open
          - closed
          - restricted
        review_policy:
          type: string
          enum:
          - open
          - closed
          - members
      additionalProperties: false
    CommunityFeatured:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date-time
          title: start date
          description: 'Accepted format: YYYY-MM-DD hh:mm'
      required:
      - start_date
      additionalProperties: false
    CommunityFeaturedSchema:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date-time
          title: start date
          description: 'Accepted format: YYYY-MM-DD hh:mm'
      required:
      - start_date
      additionalProperties: false
    CommunityGhost:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
        id:
          type: string
          readOnly: true
        metadata:
          default:
            title: Deleted community
            description: The community was deleted.
          readOnly: true
      additionalProperties: false
    CommunityGhostSchema:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
        id:
          type: string
          readOnly: true
        metadata:
          default:
            title: Deleted community
            description: The community was deleted.
          readOnly: true
      additionalProperties: false
    CommunityMetadataSchema:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 250
        description:
          type: string
          minLength: 1
          maxLength: 250
        curation_policy:
          type: string
          maxLength: 50000
        page:
          type: string
          maxLength: 50000
        website:
          type: string
          minLength: 1
        funding:
          type: array
          items:
            $ref: '#/components/schemas/FundingRelation'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/AffiliationRelation1'
      required:
      - title
      additionalProperties: false
    CommunityParentSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadataSchema'
        access:
          $ref: '#/components/schemas/CommunityAccessSchema'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/ChildrenSchema'
      required:
      - access
      - metadata
      - slug
    CommunitySchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-\w]+$
        metadata:
          $ref: '#/components/schemas/CommunityMetadataSchema'
        access:
          $ref: '#/components/schemas/CommunityAccessSchema'
        custom_fields:
          $ref: '#/components/schemas/CustomFields'
        is_verified:
          type: boolean
          readOnly: true
        theme:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/CommunityTheme'
        tombstone:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Tombstone'
        deletion_status:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DeletionStatus'
        children:
          $ref: '#/components/schemas/ChildrenSchema'
        parent:
          readOnly: true
          anyOf:
          - $ref: '#/components/schemas/CommunityParentSchema'
          - type: object
            nullable: true
      required:
      - access
      - metadata
      - slug
    CommunityThemeSchema:
      type: object
      properties:
        style:
          $ref: '#/components/schemas/CommunityThemeStyle'
        brand:
          type: string
        enabled:
          type: boolean
      additionalProperties: false
    CommunityThemeStyleSchema:
      type: object
      properties:
        font:
          type: object
          additionalProperties: {}
        primaryColor:
          type: string
        secondaryColor:
          type: string
        tertiaryColor:
          type: string
        primaryTextColor:
          type: string
        secondaryTextColor:
          type: string
        tertiaryTextColor:
          type: string
        mainHeaderBackgroundColor:
          type: string
      additionalProperties: false
    DeletionStatusSchema:
      type: object
      properties:
        is_deleted:
          type: boolean
          readOnly: true
        status:
          type: string
          readOnly: true
      additionalProperties: false
    FundingRelationSchema:
      type: object
      properties:
        funder:
          $ref: '#/components/schemas/FunderRelationSchema'
        award:
          $ref: '#/components/schemas/AwardRelationSchema'
      additionalProperties: false
    RemovalReasonSchema:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    TombstoneSchema:
      type: object
      properties:
        removal_reason:
          $ref: '#/components/schemas/RemovalReasonSchema'
        note:
          type: string
        removed_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/AgentSchema'
        removal_date:
          type: string
          format: date
          readOnly: true
        citation_text:
          type: string
        is_visible:
          type: boolean
      additionalProperties: false
    MemberEntity:
      type: object
      properties:
        id:
          type: string
        is_current_user:
          type: boolean
          readOnly: true
      required:
      - id
      - type
      additionalProperties: false
    AddBulk:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntity'
        role:
          type: string
        visible:
          type: boolean
      required:
      - role
      additionalProperties: false
    AddBulkSchema:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntity'
        role:
          type: string
        visible:
          type: boolean
      required:
      - role
      additionalProperties: false
    DeleteBulk:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntity'
      additionalProperties: false
    DeleteBulkSchema:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntity'
      additionalProperties: false
    Request:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        is_open:
          type: boolean
        expires_at:
          type: string
      additionalProperties: false
    InvitationDump:
      type: object
      properties:
        id:
          type: string
        member:
          readOnly: true
        role:
          type: string
        visible:
          type: boolean
        is_current_user:
          readOnly: true
        permissions:
          readOnly: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        revision_id:
          type: integer
        request:
          $ref: '#/components/schemas/Request'
      required:
      - id
      additionalProperties: false
    InvitationDumpSchema:
      type: object
      properties:
        id:
          type: string
        member:
          readOnly: true
        role:
          type: string
        visible:
          type: boolean
        is_current_user:
          readOnly: true
        permissions:
          readOnly: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        revision_id:
          type: integer
        request:
          $ref: '#/components/schemas/Request'
      required:
      - id
      additionalProperties: false
    InviteBulk:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntity'
        role:
          type: string
        visible:
          type: boolean
        message:
          type: string
      required:
      - role
      additionalProperties: false
    InviteBulkSchema:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntity'
        role:
          type: string
        visible:
          type: boolean
        message:
          type: string
      required:
      - role
      additionalProperties: false
    MemberDump:
      type: object
      properties:
        id:
          type: string
        member:
          readOnly: true
        role:
          type: string
        visible:
          type: boolean
        is_current_user:
          readOnly: true
        permissions:
          readOnly: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        revision_id:
          type: integer
      required:
      - id
      additionalProperties: false
    MemberDumpSchema:
      type: object
      properties:
        id:
          type: string
        member:
          readOnly: true
        role:
          type: string
        visible:
          type: boolean
        is_current_user:
          readOnly: true
        permissions:
          readOnly: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        revision_id:
          type: integer
      required:
      - id
      additionalProperties: false
    MemberEntitySchema:
      type: object
      properties:
        id:
          type: string
        is_current_user:
          type: boolean
          readOnly: true
      required:
      - id
      - type
      additionalProperties: false
    Members:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntitySchema'
      additionalProperties: false
    MembersSchema:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntitySchema'
      additionalProperties: false
    PublicDump:
      type: object
      properties:
        id:
          type: string
        member:
          readOnly: true
      required:
      - id
      additionalProperties: false
    PublicDumpSchema:
      type: object
      properties:
        id:
          type: string
        member:
          readOnly: true
      required:
      - id
      additionalProperties: false
    RequestMembership:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    RequestMembershipSchema:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    RequestSchema:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        is_open:
          type: boolean
        expires_at:
          type: string
      additionalProperties: false
    UpdateBulk:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntitySchema'
        role:
          type: string
        visible:
          type: boolean
      additionalProperties: false
    UpdateBulkSchema:
      type: object
      properties:
        members:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MemberEntitySchema'
        role:
          type: string
        visible:
          type: boolean
      additionalProperties: false
    DomainInfo:
      type: object
      properties:
        status:
          type: string
        tld:
          type: string
        flagged:
          type: boolean
      additionalProperties: false
    DomainInfoSchema:
      type: object
      properties:
        status:
          type: string
        tld:
          type: string
        flagged:
          type: boolean
      additionalProperties: false
    DomainOrg:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pid:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
        props:
          type: object
          additionalProperties:
            type: string
            maxLength: 255
        is_parent:
          type: boolean
          readOnly: true
      required:
      - name
      - pid
      additionalProperties: false
    DomainOrgSchema:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pid:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
        props:
          type: object
          additionalProperties:
            type: string
            maxLength: 255
        is_parent:
          type: boolean
          readOnly: true
      required:
      - name
      - pid
      additionalProperties: false
    Domain:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        domain:
          type: string
        tld:
          type: string
          readOnly: true
        status:
          type: integer
          readOnly: true
        status_name:
          type: string
          default: new
          enum:
          - new
          - moderated
          - verified
          - blocked
        category:
          type: integer
          readOnly: true
        category_name:
          type: string
          minLength: 1
          maxLength: 255
        flagged:
          type: boolean
        flagged_source:
          type: string
          default: ''
          maxLength: 255
        org:
          type: array
          items:
            $ref: '#/components/schemas/DomainOrgSchema'
          nullable: true
        num_users:
          type: integer
          readOnly: true
        num_active:
          type: integer
          readOnly: true
        num_inactive:
          type: integer
          readOnly: true
        num_confirmed:
          type: integer
          readOnly: true
        num_verified:
          type: integer
          readOnly: true
        num_blocked:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
      required:
      - domain
    DomainSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        domain:
          type: string
        tld:
          type: string
          readOnly: true
        status:
          type: integer
          readOnly: true
        status_name:
          type: string
          default: new
          enum:
          - new
          - moderated
          - verified
          - blocked
        category:
          type: integer
          readOnly: true
        category_name:
          type: string
          minLength: 1
          maxLength: 255
        flagged:
          type: boolean
        flagged_source:
          type: string
          default: ''
          maxLength: 255
        org:
          type: array
          items:
            $ref: '#/components/schemas/DomainOrgSchema'
          nullable: true
        num_users:
          type: integer
          readOnly: true
        num_active:
          type: integer
          readOnly: true
        num_inactive:
          type: integer
          readOnly: true
        num_confirmed:
          type: integer
          readOnly: true
        num_verified:
          type: integer
          readOnly: true
        num_blocked:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
      required:
      - domain
    Group:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        name:
          type: string
        title:
          type: string
        description:
          type: string
        provider:
          type: string
          readOnly: true
        is_managed:
          type: boolean
          readOnly: true
      additionalProperties: false
    GroupSchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        name:
          type: string
        title:
          type: string
        description:
          type: string
        provider:
          type: string
          readOnly: true
        is_managed:
          type: boolean
          readOnly: true
      additionalProperties: false
    Identities:
      type: object
      properties:
        github:
          type: string
        orcid:
          type: string
      additionalProperties: false
    IdentitiesSchema:
      type: object
      properties:
        github:
          type: string
        orcid:
          type: string
      additionalProperties: false
    NotificationPreferences:
      type: object
      properties:
        enabled:
          type: boolean
      additionalProperties: false
    SystemUser:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
        id:
          default: system
          readOnly: true
        profile:
          default:
            full_name: System
          readOnly: true
        username:
          default: System
          readOnly: true
        email:
          default: noreply@inveniosoftware.org
          readOnly: true
      additionalProperties: false
    SystemUserSchema:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
        id:
          default: system
          readOnly: true
        profile:
          default:
            full_name: System
          readOnly: true
        username:
          default: System
          readOnly: true
        email:
          default: noreply@inveniosoftware.org
          readOnly: true
      additionalProperties: false
    UserGhost:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
        id:
          type: string
          readOnly: true
        profile:
          default:
            full_name: Deleted user
          readOnly: true
        username:
          default: Deleted user
          readOnly: true
      additionalProperties: false
    UserGhostSchema:
      type: object
      properties:
        is_ghost:
          default: true
          readOnly: true
        id:
          type: string
          readOnly: true
        profile:
          default:
            full_name: Deleted user
          readOnly: true
        username:
          default: Deleted user
          readOnly: true
      additionalProperties: false
    UserPreferences:
      type: object
      properties:
        visibility:
          type: string
        email_visibility:
          type: string
        locale:
          type: string
        timezone:
          type: string
      additionalProperties: false
    UserPreferencesSchema:
      type: object
      properties:
        visibility:
          type: string
        email_visibility:
          type: string
        locale:
          type: string
        timezone:
          type: string
      additionalProperties: false
    UserProfile:
      type: object
      properties:
        full_name:
          type: string
        affiliations:
          type: string
      additionalProperties: false
    UserProfileSchema:
      type: object
      properties:
        full_name:
          type: string
        affiliations:
          type: string
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        active:
          type: boolean
        confirmed:
          type: boolean
          readOnly: true
        blocked:
          type: boolean
          readOnly: true
        verified:
          type: boolean
          readOnly: true
        status:
          type: string
          readOnly: true
        visibility:
          type: string
          readOnly: true
        is_current_user:
          readOnly: true
        email:
          type: string
        domain:
          type: string
        domaininfo:
          $ref: '#/components/schemas/DomainInfoSchema'
        identities:
          $ref: '#/components/schemas/IdentitiesSchema'
        username:
          type: string
        profile:
          type: object
          additionalProperties: {}
        preferences:
          $ref: '#/components/schemas/UserPreferencesSchema'
        blocked_at:
          type: string
          format: date-time
          readOnly: true
        verified_at:
          type: string
          format: date-time
          readOnly: true
        confirmed_at:
          type: string
          format: date-time
          readOnly: true
        current_login_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
    UserSchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        active:
          type: boolean
        confirmed:
          type: boolean
          readOnly: true
        blocked:
          type: boolean
          readOnly: true
        verified:
          type: boolean
          readOnly: true
        status:
          type: string
          readOnly: true
        visibility:
          type: string
          readOnly: true
        is_current_user:
          readOnly: true
        email:
          type: string
        domain:
          type: string
        domaininfo:
          $ref: '#/components/schemas/DomainInfoSchema'
        identities:
          $ref: '#/components/schemas/IdentitiesSchema'
        username:
          type: string
        profile:
          type: object
          additionalProperties: {}
        preferences:
          $ref: '#/components/schemas/UserPreferencesSchema'
        blocked_at:
          type: string
          format: date-time
          readOnly: true
        verified_at:
          type: string
          format: date-time
          readOnly: true
        confirmed_at:
          type: string
          format: date-time
          readOnly: true
        current_login_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
    RequestEvent:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        created_by:
          type: object
          readOnly: true
          additionalProperties: {}
        permissions:
          readOnly: true
      additionalProperties: false
    RequestEventSchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        created_by:
          type: object
          readOnly: true
          additionalProperties: {}
        permissions:
          readOnly: true
      additionalProperties: false
    BaseVocabularyRelation:
      type: object
      properties:
        id:
          type: string
      required:
      - id
      additionalProperties: false
    BaseVocabularyRelationSchema:
      type: object
      properties:
        id:
          type: string
      required:
      - id
      additionalProperties: false
    BaseVocabulary:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        title:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
        icon:
          type: string
        tags:
          type: array
          items:
            type: string
      additionalProperties: false
    BaseVocabularySchema:
      type: object
      properties:
        id:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        links:
          readOnly: true
        revision_id:
          type: integer
          readOnly: true
        title:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
        icon:
          type: string
        tags:
          type: array
          items:
            type: string
      additionalProperties: false
    ContribVocabularyRelation:
      type: object
      properties:
        id:
          type: string
      additionalProperties: false
    ContribVocabularyRelationSchema:
      type: object
      properties:
        id:
          type: string
      additionalProperties: false
    DatastreamObject:
      type: object
      properties:
        args:
          type: object
          additionalProperties: {}
      required:
      - type
      additionalProperties: false
    Task:
      type: object
      properties:
        readers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DatastreamObject'
        transformers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DatastreamObject'
        writers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DatastreamObject'
      required:
      - readers
      - writers
      additionalProperties: false
    TaskSchema:
      type: object
      properties:
        readers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DatastreamObject'
        transformers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DatastreamObject'
        writers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DatastreamObject'
      required:
      - readers
      - writers
      additionalProperties: false
    VocabularyRelationSchema:
      type: object
      properties:
        id:
          type: string
        title:
          type: object
          readOnly: true
          additionalProperties: {}
      required:
      - id
      additionalProperties: false
    BaseTransfer:
      type: object
      properties: {}
      required:
      - type
      additionalProperties: false
    BaseTransferSchema:
      type: object
      properties: {}
      required:
      - type
      additionalProperties: false
    FileAccess:
      type: object
      properties:
        hidden:
          type: boolean
      additionalProperties: false
    FileAccessSchema:
      type: object
      properties:
        hidden:
          type: boolean
      additionalProperties: false
    Transfer:
      type: object
      properties: {}
      additionalProperties: false
    InitFileSchemaMixin:
      type: object
      properties:
        key:
          type: string
        storage_class:
          type: string
        checksum:
          type: string
        size:
          type: integer
        transfer:
          $ref: '#/components/schemas/Transfer'
      required:
      - key
      additionalProperties: false
    OneOf:
      type: object
      properties: {}
      additionalProperties: false
    OneOfSchema:
      type: object
      properties: {}
      additionalProperties: false
    TransferSchema:
      type: object
      properties: {}
      additionalProperties: false
    CrontabSchedule:
      type: object
      properties:
        minute:
          type: string
          default: '*'
        hour:
          type: string
          default: '*'
        day_of_week:
          type: string
          default: '*'
        day_of_month:
          type: string
          default: '*'
        month_of_year:
          type: string
          default: '*'
      additionalProperties: false
    CrontabScheduleSchema:
      type: object
      properties:
        minute:
          type: string
          default: '*'
        hour:
          type: string
          default: '*'
        day_of_week:
          type: string
          default: '*'
        day_of_month:
          type: string
          default: '*'
        month_of_year:
          type: string
          default: '*'
      additionalProperties: false
    CustomArgs:
      type: object
      properties:
        args:
          nullable: true
      additionalProperties: false
    CustomArgsSchema:
      type: object
      properties:
        args:
          nullable: true
      additionalProperties: false
    IntervalSchedule:
      type: object
      properties:
        days:
          type: integer
        seconds:
          type: integer
        microseconds:
          type: integer
        milliseconds:
          type: integer
        minutes:
          type: integer
        hours:
          type: integer
        weeks:
          type: integer
      additionalProperties: false
    IntervalScheduleSchema:
      type: object
      properties:
        days:
          type: integer
        seconds:
          type: integer
        microseconds:
          type: integer
        milliseconds:
          type: integer
        minutes:
          type: integer
        hours:
          type: integer
        weeks:
          type: integer
      additionalProperties: false
    JobArguments:
      type: object
      properties: {}
      additionalProperties: false
    JobArgumentsSchema:
      type: object
      properties: {}
      additionalProperties: false
    LogContext:
      type: object
      properties:
        job_id:
          type: string
        run_id:
          type: string
      required:
      - job_id
      - run_id
      additionalProperties: false
    JobLogEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        level:
          type: string
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          - CRITICAL
        message:
          type: string
        module:
          type: string
        function:
          type: string
        line:
          type: integer
        context:
          $ref: '#/components/schemas/LogContext'
        sort:
          type: array
          readOnly: true
          items: {}
      required:
      - context
      - function
      - level
      - line
      - message
      - module
      - timestamp
      additionalProperties: false
    JobLogEntrySchema:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        level:
          type: string
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          - CRITICAL
        message:
          type: string
        module:
          type: string
        function:
          type: string
        line:
          type: integer
        context:
          $ref: '#/components/schemas/LogContext'
        sort:
          type: array
          readOnly: true
          items: {}
      required:
      - context
      - function
      - level
      - line
      - message
      - module
      - timestamp
      additionalProperties: false
    Schedule:
      type: object
      properties: {}
      additionalProperties: false
    User1:
      type: object
      properties: {}
      additionalProperties: false
    Run:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        job_id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        started_by_id:
          type: integer
          readOnly: true
        started_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User1'
        started_at:
          type: string
          format: date-time
          readOnly: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
        status:
          readOnly: true
          type: string
          enum:
          - QUEUED
          - RUNNING
          - SUCCESS
          - FAILED
          - WARNING
          - CANCELLING
          - CANCELLED
          - PARTIAL_SUCCESS
        message:
          type: string
          readOnly: true
        task_id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 250
        args:
          allOf:
          - $ref: '#/components/schemas/JobArgumentsSchema'
        custom_args:
          title: Custom args
          description: Advanced configuration for seasoned administrators.
          nullable: true
        queue:
          type: string
          enum:
          - celery
          - low
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 250
        description:
          type: string
        active:
          type: boolean
          default: true
        task:
          type: string
          enum:
          - import_awards_openaire
          - import_orcid
          - process_ror_affiliations
          - process_ror_funders
          - update_awards_cordis
          - update_expired_embargos
        default_queue:
          type: string
          enum:
          - celery
          - low
        default_args:
          readOnly: true
        schedule:
          anyOf:
          - $ref: '#/components/schemas/Schedule'
          - type: object
            nullable: true
        last_run:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Run'
        last_runs:
          readOnly: true
      required:
      - task
      - title
    JobSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 250
        description:
          type: string
        active:
          type: boolean
          default: true
        task:
          type: string
          enum:
          - import_awards_openaire
          - import_orcid
          - process_ror_affiliations
          - process_ror_funders
          - update_awards_cordis
          - update_expired_embargos
        default_queue:
          type: string
          enum:
          - celery
          - low
        default_args:
          readOnly: true
        schedule:
          anyOf:
          - $ref: '#/components/schemas/Schedule'
          - type: object
            nullable: true
        last_run:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Run'
        last_runs:
          readOnly: true
      required:
      - task
      - title
    LogContextSchema:
      type: object
      properties:
        job_id:
          type: string
        run_id:
          type: string
      required:
      - job_id
      - run_id
      additionalProperties: false
    RunSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        job_id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        started_by_id:
          type: integer
          readOnly: true
        started_by:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User1'
        started_at:
          type: string
          format: date-time
          readOnly: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
        status:
          readOnly: true
          type: string
          enum:
          - QUEUED
          - RUNNING
          - SUCCESS
          - FAILED
          - WARNING
          - CANCELLING
          - CANCELLED
          - PARTIAL_SUCCESS
        message:
          type: string
          readOnly: true
        task_id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 250
        args:
          allOf:
          - $ref: '#/components/schemas/JobArgumentsSchema'
        custom_args:
          title: Custom args
          description: Advanced configuration for seasoned administrators.
          nullable: true
        queue:
          type: string
          enum:
          - celery
          - low
    ScheduleSchema:
      type: object
      properties: {}
      additionalProperties: false
    TaskParameter:
      type: object
      properties:
        name:
          type: string
        default:
          readOnly: true
        kind:
          type: string
      additionalProperties: false
    TaskParameterSchema:
      type: object
      properties:
        name:
          type: string
        default:
          readOnly: true
        kind:
          type: string
      additionalProperties: false
