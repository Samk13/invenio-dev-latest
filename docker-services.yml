services:
  app:
    build:
      context: ./
      args:
        - ENVIRONMENT=DEV
    image: latest-build
    restart: "unless-stopped"
    environment:
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_COMMUNITIES_IDENTITIES_CACHE_REDIS_URL=redis://cache:6379/4"
      - "INVENIO_SEARCH_HOSTS=['search:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://latest-build:latest-build@db/latest-build"
      - "INVENIO_WSGI_PROXIES=2"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
      - "INVENIO_SITE_UI_URL=${DOCKER_SERVICES_IP_BIND:-127.0.0.1}"
      - "INVENIO_SITE_API_URL=https://${DOCKER_SERVICES_IP_BIND:-127.0.0.1}/api"
      - "INVENIO_S3_ENDPOINT_URL=http://s3:9000" # add s3 alias to your etc/hosts
      - "INVENIO_S3_ACCESS_KEY_ID=CHANGE_ME"
      - "INVENIO_S3_SECRET_ACCESS_KEY=CHANGE_ME"
  frontend:
    build: ./docker/nginx/
    image: latest-build-frontend
    restart: "unless-stopped"
    ports:
      - "80"
      - "443"
  cache:
    image: redis:7
    restart: "unless-stopped"
    read_only: true
    ports:
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:6379:6379"
  db:
    image: postgres:12.4
    restart: "unless-stopped"
    environment:
      - "POSTGRES_USER=latest-build"
      - "POSTGRES_PASSWORD=latest-build"
      - "POSTGRES_DB=latest-build"
    ports:
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:5432:5432"
  mq:
    image: rabbitmq:3-management
    restart: "unless-stopped"
    ports:
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:5672:5672"
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:15672:15672"
  search:
    image: opensearchproject/opensearch:2.16.0
    restart: "unless-stopped"
    environment:
      # settings only for development. DO NOT use in production!
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=guekxe3mvqiekeforTESTINGOnly"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
    ports:
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:9200:9200"
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:9600:9600"
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.16.0
    ports:
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:5601:5601"
    expose:
      - "5601"
    environment:
      # settings only for development. DO NOT use in production!
      - 'OPENSEARCH_HOSTS=["http://search:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
  s3:
    image: rustfs/rustfs:latest
    restart: "unless-stopped"
    ports:
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:9000:9000"
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:9001:9001"
    security_opt:
      - "no-new-privileges:true"
    environment:
      RUSTFS_ACCESS_KEY: "${RUSTFS_ACCESS_KEY:-CHANGE_ME}"
      RUSTFS_SECRET_KEY: "${RUSTFS_SECRET_KEY:-CHANGE_ME}"
      RUSTFS_SERVER_DOMAINS: "localhost"
      RUSTFS_CONSOLE_ENABLE: "true"
    volumes:
      - ./data:/data
    healthcheck:
      test:
        [
          "CMD",
          "sh", "-c",
          "curl -f ${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:9000/health && curl -f ${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:9001/health"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  flower:
    image: mher/flower:2.0.1
    restart: "unless-stopped"
    ports:
      - "${DOCKER_SERVICES_IP_BIND:-127.0.0.1}:5555:5555"
    command: celery --broker=amqp://guest:guest@mq:5672/ flower
volumes:
  data: